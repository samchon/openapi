{
  "openapi": "3.0.0",
  "info": {
    "title": "Damoa API Specification",
    "description": "Damoa API Specification",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.queenit.kr",
      "description": "production"
    },
    {
      "url": "https://api.dev.queenit.kr",
      "description": "development"
    },
    {
      "url": "http://localhost:8080",
      "description": "local"
    },
    {
      "url": "https://{namespace}-app-api.dev.rapportlabs.cloud",
      "variables": {
        "namespace": {
          "default": "damoa"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "metadata",
      "description": "metadata api"
    },
    {
      "name": "verification",
      "description": "verification api"
    },
    {
      "name": "hello",
      "description": "hello api"
    },
    {
      "name": "favorite",
      "description": "favorite api"
    },
    {
      "name": "best",
      "description": "best api"
    },
    {
      "name": "product",
      "description": "product api"
    },
    {
      "name": "ageGroup",
      "description": "ageGroup api"
    },
    {
      "name": "home",
      "description": "home api"
    },
    {
      "name": "newArrival",
      "description": "new arrival api"
    },
    {
      "name": "hotDeal",
      "description": "hot deal api"
    },
    {
      "name": "recommendation",
      "description": "recommendation api"
    },
    {
      "name": "promotion",
      "description": "promotion api"
    },
    {
      "name": "cart",
      "description": "cart api"
    },
    {
      "name": "account",
      "description": "account api"
    },
    {
      "name": "order",
      "description": "order api"
    },
    {
      "name": "payment",
      "description": "payment api"
    },
    {
      "name": "banner",
      "description": "banner api"
    },
    {
      "name": "collection",
      "description": "collection api"
    },
    {
      "name": "search",
      "description": "search api"
    },
    {
      "name": "autocomplete",
      "description": "autocomplete api"
    },
    {
      "name": "coupon",
      "description": "coupon api"
    },
    {
      "name": "review",
      "description": "review api"
    },
    {
      "name": "reviewStatistics",
      "description": "reviewStatistics api"
    },
    {
      "name": "userProfile",
      "description": "user profile api"
    },
    {
      "name": "image",
      "description": "image api"
    },
    {
      "name": "prompt",
      "description": "prompt api"
    },
    {
      "name": "shopLive",
      "description": "shopLive api"
    },
    {
      "name": "point",
      "description": "point api"
    },
    {
      "name": "productRanking",
      "description": "productRanking api"
    },
    {
      "name": "tier",
      "description": "tier api"
    },
    {
      "name": "styleShot",
      "description": "style shot api"
    },
    {
      "name": "attendanceCheck",
      "description": "attendance check api"
    },
    {
      "name": "tag",
      "description": "tag api"
    }
  ],
  "paths": {
    "/metadata": {
      "get": {
        "description": "metadata api",
        "operationId": "getMetadata",
        "tags": [
          "metadata"
        ],
        "responses": {
          "200": {
            "description": "metadata response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/hello": {
      "get": {
        "summary": "hello world",
        "operationId": "hello",
        "tags": [
          "hello"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to hello",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/verifications/sms": {
      "post": {
        "summary": "send verification code by sms\n[ invalid phone number -> ApiErrorType.INVALID_VALUE]\n",
        "operationId": "sendVerifCodeBySms",
        "tags": [
          "verification"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerifCodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to send verification code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendVerifCodeResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/verifications": {
      "put": {
        "summary": "verify code\n[invalid token or code -> ApiErrorType.INVALID_VALUE]\n",
        "operationId": "verifyCode",
        "tags": [
          "verification"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to verify code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCodeResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/verifications/kakao": {
      "put": {
        "summary": "verify kakao access token",
        "operationId": "verifyKakaoToken",
        "tags": [
          "verification"
        ],
        "description": "- 카카오 로그인을 통해 인증한 사용자의 경우 발급받은 카카오 API access token 과 전화번호를 이용하여 verifiedToken을 요청\n- 전화번호는 국제 전화 형식 (예 : +82 10-1111-1111)\n- 발급받은 verifiedToken 을 이용하여 signUpV2 API 를 호출하여 로그인/회원가입 진행\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyKakaoTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to verify",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyKakaoTokenResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/migrate-user": {
      "post": {
        "summary": "firebase auth user -> damoa auth user 전환",
        "description": "> 기존 구버전 클라이언트에서 firebase auth를 사용하던 유저를 damoa auth를 사용하도록 전환\n\nfirebase auth access token을 받으면, 해당 사용자 정보를 damoa auth 쪽으로 옮겨오고, damoa auth의 access/refresh token을 사용하게끔 정보를 내려준다\n\n1. (클라이언트) firebase auth 정보가 있으면, 기존 firebase auth token을 리프레시한다\n2. (클라이언트) firebase auth user -> damoa auth user로 전환하기 위해 서버쪽에 정의된 별도의 endpoint를 호출한다 (login required)\n3. (서버) 클라이언트가 보내준 access token 정보에서 token vendor를 확인한다 -> firebase에서 발급된 것인지, damoa에서 발급된 것인지 확인\n4. (서버) firebase에서 발급된 토큰으로 확인되면 -> access token이 유효한지 한번 더 검사한다\n5. (서버) access token이 유효한 것이 확인되면 -> firebase auth user 정보를 damoa auth user 테이블에 저장한다\n6. (서버) damoa auth user 테이블에 firebase auth user 정보를 저장한 후에, damoa auth token(access & refresh)을 response로 보내준다\n7. (클라이언트) damoa auth token을 사용한다\n\n로그인된 상태에서(`Authorization` request header 설정) request body의 access token을 실어보낸다\n",
        "operationId": "migrateUser",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseAuthUserMigrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to migrate user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "204": {
            "description": "이미 damoa auth user인 경우"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/signin/anonymous": {
      "post": {
        "summary": "anonymous 사용자로 로그인",
        "description": "anonymous 사용자로 로그인\n[invalid token -> ApiErrorType.INVALID_VALUE]\n",
        "operationId": "signInAnonymously",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "success to signin anonymously",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/signup/providers/{providerType}": {
      "post": {
        "summary": "인증된 사용자 로그인/가입",
        "description": "- 기존에 가입했던 사용자가 다시 로그인하거나 새롭게 가입하는 경우에 호출됨\n- 현재 `providerType`으로 `SMS` 및 `KAKAO` 지원\n  - 다른 providerType을 사용하면 에러 발생\n  - 추후 다른 auth provider(facebook, ..) 등이 추가될 수도 있음\n\n- request header에 들어가는 authorization 정보에는 anonymous signup api 호출 이후에 발급받은 access token을 기입한다\n  - `Bearer {{ anonymous access token }}` 형식\n  - firebase auth를 통해 발급받은 access token은 사용할 수 없다\n",
        "operationId": "signUpV2",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "providerType",
            "schema": {
              "$ref": "#/components/schemas/ProviderTypeEnum"
            },
            "required": true,
            "description": "auth provider (SMS, KAKAO, ..)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to signup",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "인증된 사용자 혹은 anonymous 사용자의 access/refresh token 갱신",
        "description": "인증된 사용자 혹은 anonymous 사용자의 access/refresh token 갱신\n",
        "operationId": "refreshToken",
        "tags": [
          "account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DamoaTokenRefreshRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DamoaTokenDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "사용자의 계정 정보를 조회할 경우에 사용한다",
        "description": "damoa auth를 사용하는 사용자만 정상적으로 이용할 수 있다 (anonymous 사용자 포함)",
        "operationId": "getDamoaLoginAccount",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to retrieve account info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginAccountDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/signout": {
      "post": {
        "summary": "signout",
        "operationId": "signOut",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to signout"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "logout",
        "operationId": "logout",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to logout"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/external-uid": {
      "get": {
        "summary": "get external uid",
        "description": "해당 user의 외부 API 호출용으로 사용될 수 있는 external uid를 반환받습니다.",
        "operationId": "getExternalUid",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "external uid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalUidDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/payment-methods": {
      "get": {
        "summary": "get registered payment methods",
        "description": "해당 user가 퀸잇페이에 등록한 결제 수단 목록을 반환받습니다.",
        "operationId": "getPaymentMethods",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "registered payment methods",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/credentials/connect-pay": {
      "get": {
        "summary": "get connect pay credentials",
        "description": "커넥트페이 JS SDK를 사용하기 위한 credential을 반환받습니다.",
        "operationId": "getConnectPayCredentials",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "connect pay clientKey and user specific customerKey",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectPayCredentialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "summary": "get favorites",
        "operationId": "getMyFavorites",
        "tags": [
          "favorite"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- my favorite product list\n- 퀸잇 즉시 할인이 적용되는 경우 `FavoriteProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `price`, `productDiscountRate`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/favorites/{productId}": {
      "delete": {
        "summary": "delete favorite",
        "operationId": "deleteMyFavorite",
        "tags": [
          "favorite"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "put": {
        "summary": "add favorite",
        "operationId": "addMyFavorite",
        "tags": [
          "favorite"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to add"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/best/products": {
      "get": {
        "summary": "get best products for recent specific period",
        "operationId": "getBestAppProducts",
        "tags": [
          "best"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "required": true,
            "description": "best products for this period",
            "name": "period",
            "schema": {
              "$ref": "#/components/schemas/BestPeriodEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "연령대 코드.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          }
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get best products for recent specific period\n- 퀸잇 즉시 할인이 적용되는 경우 `AppProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/best/brands/v2": {
      "get": {
        "summary": "get best brands for recent specific period",
        "operationId": "getBestAppBrands",
        "tags": [
          "best"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "required": true,
            "description": "best brands for this period",
            "name": "period",
            "schema": {
              "$ref": "#/components/schemas/BestPeriodEnum"
            }
          },
          {
            "in": "query",
            "description": "연령대 코드.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          }
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get best brands for recent specific period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BestBrandListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/best/WooRanking": {
      "get": {
        "summary": "get woo ranking products - DEPRECATED",
        "operationId": "getWooRankingProducts",
        "tags": [
          "best"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "woo ranking products - DEPRECATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/promotions/brands": {
      "get": {
        "summary": "get promotion brands",
        "operationId": "getPromotedBrands",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "promotion brands",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/promotions/products": {
      "get": {
        "summary": "get promotion products",
        "operationId": "getPromotionProducts",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- promotion products\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/promotions/connect-pay": {
      "get": {
        "summary": "get connect pay promotions",
        "operationId": "getConnectPayPromotions",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "connect-pay card discount promotions and interest-free installment policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectPayPromotionDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/promotions/toss": {
      "get": {
        "summary": "get toss payments promotions",
        "operationId": "getTossPromotions",
        "tags": [
          "promotion"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "toss card discount promotions policies and interest-free installment policies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TossPaymentPromotionDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/newArrivals/products": {
      "get": {
        "summary": "get new arrival products - DEPRECATED",
        "operationId": "getNewArrivalProducts",
        "tags": [
          "newArrival"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "new products - DEPRECATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/promotions/products/discounted": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get discounted promotion products by orderBy parameters",
        "operationId": "getDiscountedPromotionProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- discounted promotion products by orderBy parameters\n- 퀸잇 즉시 할인이 적용되는 경우 `AppProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/discount-benefits": {
      "get": {
        "summary": "get product's discount benefits information",
        "operationId": "getProductDiscountBenefits",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result of product's discount benefits information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDiscountBenefitsDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/shopping-mall": {
      "get": {
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get shopping mall products by orderBy parameters",
        "operationId": "getShoppingMallProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- shopping mall products by orderBy parameters\n- 퀸잇 즉시 할인이 적용되는 경우 `AppProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/keyword-related": {
      "get": {
        "summary": "키워드에 따른 연관상품들을 반환합니다.",
        "operationId": "getKeywordRelatedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "디버깅을 위한 파라미터. 해당 값이 true면 로그를 훨씬 상세하게 찍습니다.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "키워드 연관상품 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/related": {
      "get": {
        "summary": "특정 조건에 따른 연관상품들을 반환합니다.",
        "operationId": "getRelatedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "relationTargetProductIds",
            "description": "이 파라미터에 넘겨진 상품들과 연관된 상품들을 반환합니다.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "디버깅을 위한 파라미터. 해당 값이 true면 로그를 훨씬 상세하게 찍습니다.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "연관상품 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/personalized/products": {
      "post": {
        "deprecated": true,
        "summary": "Get filtered personalized products",
        "operationId": "getFilteredPersonalizedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilteredPersonalizedProductRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "- Get personalized products filtered by parameters\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "연령대 코드.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "mySizeOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "tagId",
            "deprecated": true,
            "schema": {
              "type": "integer",
              "description": "(deprecated) use tagIdForBrandSourcing",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "tagIdForBrandSourcing",
            "schema": {
              "description": "tagId에 대응되는 brandSourcingCode 들에 대해 상품을 조회한다",
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "clickedProductIds",
            "description": "- 클릭한 상품들. 개인화된 상품 제공을 위해 활용됩니다.\n- 각 상품이 클릭되었던 시간 정보 전달을 위해 clickedProductAtMillis 파라미터를 함께 전달해야 합니다.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "clickedProductAtMillis",
            "description": "- 상품을 클릭했던 시간들. 각 시간은 clickedProductIds 파라미터에 대응됩니다.\n- clickedProductIds와 clickedProductAtMillis 파라미터의 크기는 항상 같아야 합니다.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "int64"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "modelId",
            "description": "- 어떤 개인화 모델을 사용할 것인지. (A/B Testing 용도)\n- 노션 참고: https://www.notion.so/rapportlabs/A-B-Protocol-c878d879ff0443cda929bb17d9b137c1\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "postProcessingId",
            "description": "- 개인화 결과의 후처리를 어떻게 할 것인가. (A/B Testing 용도)\n- 노션 참고: https://www.notion.so/rapportlabs/A-B-Protocol-c878d879ff0443cda929bb17d9b137c1\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "디버깅을 위한 파라미터. 해당 값이 true면 로그를 훨씬 상세하게 찍습니다.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "summary": "Get personalized recommendation products by filter",
        "operationId": "getPersonalizedRecommendationProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get personalized recommendation products by filter and orderBy parameters\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/refined": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "brandId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "brandIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "description": "연령대 코드.",
            "required": false,
            "name": "ageGroupCode",
            "schema": {
              "$ref": "#/components/schemas/AgeGroupCodeEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "mySizeOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "description": "필터링할 상품 속성 id 목록",
            "required": false,
            "name": "productFeatureIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "deprecated": true,
            "required": false,
            "description": "(DEPRECATED) enabledTotalCount, enabledProductFeatureAggregation, enabledProductCategoryAggregation, enabledBrandAggregation 를 사용하세요.",
            "name": "enabledProductAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 전체 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledTotalCount",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 상품 속성별 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledProductFeatureAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 상품 카테고리별 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledProductCategoryAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 브랜드별 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledBrandAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "deprecated": true,
            "description": "(deprecated) tagIdForBrandSourcing 파라미터를 사용하세요",
            "name": "tagId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "tagIdForBrandSourcing",
            "schema": {
              "description": "tagId에 대응되는 brandSourcingCode 들에 대해 상품을 조회한다",
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 태그 필터를 위한 ids",
            "name": "tagIdsForProductTag",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 태그가 없는 상품들도 함께 노출시켜주기 위한 파라미터",
            "name": "allowProductsWithoutTags",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "Get refined products by filter and orderBy parameters",
        "operationId": "getRefinedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get refined products by filter and orderBy parameters\n- 퀸잇 즉시 할인이 적용되는 경우 `AppProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/advertisement": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "description": "Please set orderBy to RECOMMENDATION as a default value.",
            "name": "orderBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProductOrderByEnum"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "mySizeOnly",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "Get advertisement products by filter and orderBy parameters",
        "operationId": "getAdvertisementProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get advertisement products by filter and orderBy parameters\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdvertisementProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/detail/advertisement": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get advertisement products by filter and orderBy parameters",
        "operationId": "getAdvertisementProductDetail",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- Get advertisement products in PDP\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdvertisementProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "summary": "get products by ids parameter",
        "description": "( count of ids is over 40 -> ApiErrorResponseCode.LIMITATION_EXCEEDED )",
        "operationId": "getProducts",
        "tags": [
          "product"
        ],
        "responses": {
          "200": {
            "description": "- products (unique and not ordered) by ids\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSetDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/similar/v2": {
      "get": {
        "summary": "get image based similar product (v2)",
        "operationId": "getImageBasedSimilarProductsV2",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minRating",
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "name": "modelId",
            "required": false,
            "description": "어떤 모델을 사용할건지. https://www.notion.so/rapportlabs/A-B-Protocol-c878d879ff0443cda929bb17d9b137c1?pvs=4",
            "schema": {
              "type": "string",
              "default": "TAG_SIM"
            }
          },
          {
            "in": "query",
            "name": "postProcessingId",
            "description": "후처리를 어떻게 할 것인지. https://www.notion.so/rapportlabs/A-B-Protocol-c878d879ff0443cda929bb17d9b137c1?pvs=4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "verbose",
            "required": false,
            "schema": {
              "description": "디버깅을 위한 파라미터. 해당 값이 true면 로그를 훨씬 상세하게 찍습니다.",
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- 이미지 기반 유사 상품을 내려준다. (v1과 비교해보고 결과에 따라 특정 버전 deprecated 시킬 예정)\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/similar": {
      "get": {
        "summary": "get image based similar product",
        "operationId": "getImageBasedSimilarProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minRating",
            "required": true,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- 이미지 기반 유사 상품을 내려준다.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/outfit": {
      "get": {
        "summary": "get image based outfit product",
        "operationId": "getImageBasedOutfitProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minRating",
            "required": true,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- 이미지 기반 코디 상품을 내려준다.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/hotDeals/products": {
      "get": {
        "summary": "get hotDeal products",
        "operationId": "getHotDealProducts",
        "tags": [
          "hotDeal"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- hot deal products\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/recommendations/categories": {
      "get": {
        "summary": "get recommended product categories",
        "operationId": "getRecommendationCategories",
        "tags": [
          "recommendation"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "recommendation categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/recommendations/categories/{categoryId}/products": {
      "get": {
        "summary": "get recommended products",
        "operationId": "getRecommendedProductsByCategory",
        "tags": [
          "recommendation"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- recommended products\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/recommendations/products": {
      "get": {
        "summary": "get recommended products",
        "operationId": "getRecommendedProducts",
        "tags": [
          "recommendation"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- recommended products\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/tag-groups": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TagTypeEnum"
            }
          }
        ],
        "summary": "get tag-groups by type",
        "description": "파라미터에 따른 태그 그룹 정보들을 가져옵니다",
        "operationId": "getTagGroups",
        "tags": [
          "tag"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "태그 그룹 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGroupListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TagTypeEnum"
            }
          },
          {
            "in": "query",
            "name": "groupId",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "summary": "get tags",
        "description": "tag 정보를 가져옵니다.",
        "operationId": "getTags",
        "tags": [
          "tag"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "조건에 따른 tag 정보를 가져옵니다.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/release-estimate": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product estimate release at",
        "operationId": "getProductEstimateRelease",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product estimate release(상품 예상 출고일) 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReleaseEstimateDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/page": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "upload product page",
        "operationId": "uploadProductPage",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadProductPageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to upload"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product",
        "operationId": "getProduct",
        "description": "( can't find product -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- product\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/personal": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get personal product",
        "description": "( can't find product -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getPersonalProduct",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonalProductDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/items": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product items",
        "operationId": "getProductItems",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product items(상품 옵션) 목록 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductItemListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/item-availabilities": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product item availability list",
        "description": "해당하는 상품에 대한 상품 옵션들의 구매 가능 여부 목록을 반환합니다",
        "operationId": "getProductItemAvailabilityList",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "상품 옵션들의 구매 가능 여부 목록",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductItemAvailabilityDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/users/birth-year": {
      "post": {
        "summary": "save of birth year for user",
        "description": "save of birth year in user profile",
        "operationId": "saveUserBirthYear",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBirthYearDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "saved birth year of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBirthYearDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/users/body-size": {
      "post": {
        "summary": "save of body size for user",
        "description": "save of body size",
        "operationId": "saveUserBodySize",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBodySizeDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "saved body size of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBodySizeDataDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "get user profile",
        "description": "( can't find user profile -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getUserProfile",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/users/delivery-addresses": {
      "get": {
        "summary": "get user delivery addresses",
        "description": "사용자의 전체 배송지 목록을 가져옵니다 (`retrievedAt` 순으로 정렬되어 내려갑니다)",
        "operationId": "getUserDeliveryAddresses",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "user delivery address list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDeliveryAddressDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "put": {
        "summary": "add user delivery address",
        "description": "- 사용자의 배송지 정보를 추가하거나 `retrievedAt`을 업데이트합니다\n  - 기등록된 배송지 목록 중에서 주소와 배송 요청사항이 같은 경우에만 업데이트합니다\n",
        "operationId": "addUserDeliveryAddress",
        "tags": [
          "userProfile"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDeliveryAddressAddRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to add user delivery address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeliveryAddressDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/tier": {
      "get": {
        "summary": "get user's tier",
        "operationId": "getTier",
        "tags": [
          "tier"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get user's tier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TierDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/tier/next": {
      "get": {
        "summary": "get user's next tier information",
        "operationId": "getNextTierInfo",
        "tags": [
          "tier"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get user's next tier information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextTierInfoDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/images/{imageCategory}/uploadable-url": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "imageCategory",
          "schema": {
            "$ref": "#/components/schemas/ImageCategoryEnum"
          }
        },
        {
          "in": "query",
          "required": true,
          "name": "filename",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "generate uploadable url to upload images for login user",
        "operationId": "generateImageUploadableUrl",
        "tags": [
          "image"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "uploadable image url",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadableImageResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/images/{imageCategory}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "imageCategory",
          "schema": {
            "$ref": "#/components/schemas/ImageCategoryEnum"
          }
        }
      ],
      "post": {
        "deprecated": true,
        "description": "(deprecated) please use generateImageUploadableUrl instead of this api",
        "summary": "upload images for login user",
        "operationId": "uploadImage",
        "tags": [
          "image"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/images/{imageCategory}/base64": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "imageCategory",
          "schema": {
            "$ref": "#/components/schemas/ImageCategoryEnum"
          }
        }
      ],
      "post": {
        "summary": "upload images as base 64 for login user",
        "operationId": "uploadImageBase64",
        "tags": [
          "image"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Base64ImageUploadRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload image as base64",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product reviews",
        "operationId": "getProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayProductReviewListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/v2": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product reviews v2",
        "operationId": "findProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryPage"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "required": false,
            "name": "sortOrder",
            "schema": {
              "$ref": "#/components/schemas/ProductReviewSortOrderEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayProductReviewListDtoV2"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/representatives": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get representative product reviews",
        "operationId": "getRepresentativeProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "representative product reviews",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepresentativeProductReviewListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/reviews/{reviewId}": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "put": {
        "summary": "update product review",
        "description": "본인의 상품평을 수정합니다.\n- RESOURCE_NOT_FOUND: reviewId에 해당하는 상품평을 찾을 수 없을 때\n- ACCESS_DENIED: 타인의 상품평을 수정하려고 할 때\n",
        "operationId": "updateProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductReviewRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated product review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/items/{productItemId}/review": {
      "parameters": [
        {
          "in": "path",
          "name": "productItemId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "query",
          "name": "orderLineId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "create product review",
        "operationId": "createProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReviewDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to create product review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/reviews/{reviewId}": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "summary": "get product review",
        "operationId": "getProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayProductReviewDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "delete product review",
        "operationId": "deleteProductReview",
        "description": "본인의 상품평을 삭제합니다.\n- RESOURCE_NOT_FOUND: reviewId에 해당하는 상품평을 찾을 수 없을 때\n- ACCESS_DENIED: 타인의 상품평을 수정하려고 할 때\n",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete product review"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/reviews/{reviewId}/favorites": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "summary": "favorites product review",
        "operationId": "favoritesProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "204": {
            "description": "success to favorites product review"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "delete favorites product review",
        "operationId": "deleteFavoritesProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete favorites product review"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/user/reviews": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "summary": "get created product reviews of user",
        "operationId": "getMyProductReviews",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "created product reviews of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyProductReviewListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/user/review-candidates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "summary": "get created product reviews of user",
        "operationId": "getMyProductReviewCandidates",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review candidates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewCandidateListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/user/reviews/creatable-count": {
      "get": {
        "summary": "get count creatable product review of user",
        "operationId": "countCreatableProductReviewOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "number of creatable product review of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/user/reviews/created-count": {
      "get": {
        "summary": "get count created product review of user",
        "operationId": "countCreatedProductReviewOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "number of created product review of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LongDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/user/reviews/exist": {
      "get": {
        "summary": "check user's review exist",
        "operationId": "checkExistProductReviewOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "flag of does user created review before",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredBooleanDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/user/reviews/accumulable-point": {
      "get": {
        "summary": "get user's accumulable point amount of review creation",
        "operationId": "getAccumulablePointProductReviewCreationOfUser",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "accumulable point amount of when user created total creatable review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequiredLongDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/statistics/summary": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review statistics summary",
        "operationId": "getProductReviewStatisticsSummary",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review statistics summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReviewStatisticsSummaryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/statistics/size": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review size statistics",
        "operationId": "getProductSizeStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review size statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSizeStatisticsDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/statistics/brightness": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review brightness statistics",
        "operationId": "getProductBrightnessStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review brightness statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBrightnessStatisticsDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/statistics/color-sense": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review color-sense statistics",
        "operationId": "getProductColorSenseStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review color-sense statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductColorSenseStatisticsDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/reviews/statistics/thickness": {
      "parameters": [
        {
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get product review thickness statistics",
        "operationId": "getProductThicknessStatistics",
        "tags": [
          "reviewStatistics"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product review thickness statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductThicknessStatisticsDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/categories/{categoryId}/attributes": {
      "parameters": [
        {
          "in": "path",
          "name": "categoryId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get category's attributes",
        "operationId": "getProductCategoryAttributes",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product category attributes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryReviewAttributeDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/reviews/{reviewId}/reports": {
      "parameters": [
        {
          "in": "path",
          "name": "reviewId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "summary": "report product review",
        "description": "(can't report twice -> ApiErrorResponseCode.REVIEW_REPORTED_TWICE) (reporter uid and review uid can't be same -> ApiErrorResponseCode.REVIEW_REPORTED_BY_SELF)",
        "operationId": "reportProductReview",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to report product review"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/home/categories": {
      "get": {
        "summary": "get product categories in home screen",
        "operationId": "getHomeProductCategories",
        "tags": [
          "home"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product categories in home screen",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeProductCategoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/app/categories": {
      "get": {
        "summary": "get all categories with displaying products",
        "operationId": "getDisplayingCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "return all categories with displaying products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "summary": "get top product categories",
        "operationId": "getTopProductCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "withAllCategory",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get inner product categories",
        "operationId": "getInnerProductCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "inner product categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/categories/{categoryId}/products": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get categorized products",
        "operationId": "getCategorizedProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- categorized products\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/age-group-filters": {
      "get": {
        "summary": "get all filters of age group.",
        "operationId": "getAgeGroupFilters",
        "tags": [
          "ageGroup"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "all age group filters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeGroupFilterListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/brands": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "categoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get all brands",
        "operationId": "getAllBrands",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "brands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BrandDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/brands/{brandId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get brand detail",
        "description": "( can't find brand -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getBrandDetail",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "brand detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandDetailDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/brands/{brandId}/categories": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get brand categories",
        "operationId": "getBrandCategories",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "brand categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCategoryDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/brands/{brandId}/categories/{categoryId}/products": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get categorized brand products",
        "operationId": "getBrandProducts",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "- categorized products\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/carts": {
      "post": {
        "summary": "add to cart",
        "operationId": "addToCart",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to add to cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToCartResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "get": {
        "summary": "get cart items",
        "operationId": "getCartItems",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- cart items\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemGroupDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/carts/{cartItemId}": {
      "delete": {
        "summary": "delete cart item",
        "operationId": "deleteCartItem",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to delete cart item"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/carts/delete": {
      "post": {
        "summary": "delete cart items",
        "operationId": "deleteCartItems",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCartItemsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to delete cart items"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/carts/rearrange": {
      "post": {
        "summary": "rearrange cart items for quantity constraint",
        "operationId": "rearrangeCartItems",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- polished cart items\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItemGroupDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/carts/{cartItemId}/quantity/{quantity}": {
      "post": {
        "summary": "update cart item quantity",
        "operationId": "updateCartItemQuantity",
        "tags": [
          "cart"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cartItemId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "quantity",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to update cart item quantity"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "get my order histories",
        "operationId": "getMyOrders",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrderHistoryListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "start order for cart items",
        "description": "( count of order line to order exceeds limit -> ApiErrorResponseCode.ORDER_LINE_COUNT_LIMIT_PER_ORDER_EXCEEDED )\n( order unavailable product item exists -> ApiErrorResponseCode.ORDER_UNAVAILABLE_PRODUCT_ITEM )\n",
        "operationId": "startOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOrderRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product purchase material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "put": {
        "summary": "start order with adding cart items",
        "description": "( count of order line to order exceeds limit -> ApiErrorResponseCode.ORDER_LINE_COUNT_LIMIT_PER_ORDER_EXCEEDED )\n( order unavailable product item exists -> ApiErrorResponseCode.ORDER_UNAVAILABLE_PRODUCT_ITEM )\n",
        "operationId": "startOrderFromAdding",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartOrderFromAddingRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product purchase material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/wait-for-deposit/exist": {
      "get": {
        "summary": "whether exist order of waiting for deposit",
        "operationId": "existOrdersOfWaitingForDeposit",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "whether exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order history",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getMyOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "abort order",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "abortOrderById",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "restoreCartItems",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result order data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/purchase-material": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order purchase material",
        "description": "refresh 나 network 유실에 대비하여 `결제 완료 전 주문` 의 결제 정보(`purchaseMaterial`)를 다시 가져오는 API",
        "operationId": "getOrderPurchaseMaterial",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product purchase material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPurchaseMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/{orderLineId}/confirm-receipt": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "orderLineId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "confirm order line receipt",
        "description": "- orderline에 대해서 구매확정 진행\n- 배송 완료 상태에서만 확정 가능\n- 구매확정이 된 orderline은 교환/반품 불가능\n  - app 내에서 반품 신청하는 것 불가능\n- 발생 가능한 에러\n  - `TICKET_PROCESSING_IS_REQUIRED_TO_CONFIRM_RECEIPT (7001)`\n    - `SUBMITTED` (요청됨) / `CONFIRMED` (승인됨) 상태의 OLC/OLR 티켓이 존재하는 경우 -> 아직 처리되지 않은 OLC/OLR 티켓이 존재하는 경우\n  - `CAN_ONLY_CONFIRM_RECEIPT_OF_PAID_ORDER_LINE (7002)`\n    - 환불 처리된 / 결제를 대기중인 orderline은 구매 확정이 불가능함\n  - `CANNOT_CONFIRM_RECEIPT_WHEN_DELIVERY_NOT_COMPLETE (7003)`\n    - 아직 배송 완료상태가 아닌 orderline은 구매 확정이 불가능함\n",
        "operationId": "confirmOrderLineReceipt",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to confirm receipt"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/purchases/{purchaseId}/point": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "apply point",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )\n( can't apply point -> ApiErrorResponseCode.POINT_NOT_CONSUMABLE )\n( lack of point -> ApiErrorResponseCode.LACK_OF_POINT )\n",
        "operationId": "applyPointForOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyPointRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to save",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyPointResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/purchases/{purchaseId}/coupons/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "delete": {
        "summary": "release coupon",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "releaseCouponOfOrderV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to release",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "apply coupon",
        "description": "( can't find order, issued coupon -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )\n( can't apply coupon -> ApiErrorResponseCode.COUPON_NOT_CONSUMABLE )\n",
        "operationId": "applyCouponToOrderV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCouponRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to save",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/purchases/{purchaseId}/delivery": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "save delivery request",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "saveDeliveryRequest",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to update delivery request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderSummaryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/delivery-request": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "update delivery request before delivery",
        "description": "- 출고 전 주문의 배송지를 변경합니다\n- 발생할 수 있는 에러 유형\n  - `ApiErrorResponseCode.INVALID_VALUE`\n    - 해당 주문에 cancel/return ticket state가 `SUBMITTED`, `CONFIRMED` 상태인 티켓이 존재하는 경우\n    - 결제가 완료되지 않은 유령 주문인 경우\n  - `ApiErrorResponseCode.RESOURCE_NOT_FOUND`\n    - 주문이 존재하지 않는 경우\n  - `ApiErrorResponseCode.ORDER_ALREADY_DISPATCHED`\n    - 해당하는 주문의 개별 주문들의 배송상태가 모두 `WAIT`이 아닌 경우\n  - `ApiErrorResponseCode.CANNOT_CHANGE_DELIVERY_AREA`\n    - 기존 배송지와 다른 배송지역(ex. 기본 배송지 -> 도서산간 배송지)으로 배송지를 바꾸려고 시도한 경우\n",
        "operationId": "updateDeliveryRequestBeforeDelivery",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to update delivery request"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/purchases/{purchaseId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order history by purchase",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getMyOrderByPurchase",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "abort order",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "abortOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "restoreCartItems",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to abort"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "complete order",
        "description": "( can't find order -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "completeOrder",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to complete",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/order-line-tickets": {
      "get": {
        "summary": "get order line ticket history",
        "operationId": "getOrderLineTickets",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ticket",
            "schema": {
              "$ref": "#/components/schemas/OrderLineTicketEnum"
            }
          },
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "list order line tickets (return or cancel)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOrderLineTicketListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/order-line-tickets/count/summary": {
      "get": {
        "summary": "유저의 진행중(또는 최근 완료된)인 반품/취소 티켓들을 집계합니다.(My 페이지 표시용)",
        "operationId": "getOrderLineTicketsCountSummary",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "count OL tickets. (return or cancel)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyOLTicketsCountDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/prompts/creatable-review-prompt": {
      "get": {
        "summary": "get creatable review prompt with order line",
        "operationId": "getCreatableReviewPrompt",
        "tags": [
          "prompt"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "creatable review prompt",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatableReviewPromptDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/refund-account": {
      "get": {
        "summary": "get user refund account",
        "operationId": "getUserRefundAccount",
        "tags": [
          "account"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "refund account of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRefundAccountDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "save refund account",
        "operationId": "saveRefundAccount",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to save"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/cancel": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "cancel order item",
        "description": "- 발생할 수 있는 에러\n  - `CANNOT_REQUEST_REFUND_AFTER_CONFIRM_RECEIPT (7004)`\n    - 이미 구매확정이 완료된 orderline에 대해서 취소 티켓 생성 요청을 하는 경우\n",
        "operationId": "requestToCancelOrderItem",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OLCRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order history with created cancel ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/cancel/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "estimate order item cancellation",
        "operationId": "estimateOrderItemCancellationV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PartialOrderItemDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "estimation result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OLCEstimationResultDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/cancel/{ticketId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "ticketId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order item cancel ticket detail",
        "operationId": "getOrderItemCancelTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "cancel ticket response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineCancelTicketWithOrderDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "withdraw order item cancellation",
        "operationId": "withdrawOrderItemCancelTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order history with withdrawn ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/return": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "return order item",
        "description": "- 발생할 수 있는 에러\n  - `CANNOT_REQUEST_REFUND_AFTER_CONFIRM_RECEIPT (7004)`\n    - 이미 구매확정이 완료된 orderline에 대해서 반품 티켓 생성 요청을 하는 경우\n  - `RESOURCE_NOT_FOUND (4)`\n    - Can't not find order\n  - `LIMITATION_EXCEEDED (5)`\n    - imageUrls의 item이 3개 초과인 경우\n",
        "operationId": "requestToReturnOrderItem",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OLRRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "order history with created return ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/return/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "estimate order item returning",
        "operationId": "estimateOrderItemReturningV2",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OLREstimateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "estimation result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OLREstimationResultDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/orders/{orderId}/lines/return/{ticketId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "orderId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "ticketId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get order item return ticket detail",
        "operationId": "getOrderItemReturnTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "return ticket response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineReturnTicketWithOrderDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "withdraw order item returning",
        "operationId": "withdrawOrderItemReturnTicket",
        "tags": [
          "order"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "order history with withdrawn ticket",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderHistoryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/iamport": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start iamport payment for specific purchase",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "startIamportPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartIamportPaymentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "iamport payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IamportPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/iamport/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish iamport payment process",
        "description": "( paid amount does not match -> ApiErrorResponseCode.PAYMENT_NOT_FULLY_PAID )",
        "operationId": "finishIamportPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "abandon iamport payment",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "abandonIamportPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/toss": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start toss payment for specific purchase",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "startTossPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTossPaymentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "toss payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TossPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/toss/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish toss payment process",
        "description": "( paid amount does not match -> ApiErrorResponseCode.PAYMENT_NOT_FULLY_PAID )",
        "operationId": "finishTossPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "abandon toss payment",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "abandonTossPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/connect-pay": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start connect-pay payment for specific purchase",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "startConnectPayPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartConnectPayPaymentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "connect-pay payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectPayPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/connect-pay/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish connect-pay payment process",
        "description": "( paid amount does not match -> ApiErrorResponseCode.PAYMENT_NOT_FULLY_PAID )",
        "operationId": "finishConnectPayPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "abandon connect-pay payment",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "abandonConnectPayPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/dry": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start dry-run payment for specific purchase",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "startDryRunPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "dry run payment material",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DryRunPaymentMaterialDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/dry/merchantIds/{merchantId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "merchantId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "finish dry-run payment process",
        "operationId": "finishDryRunPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "delete": {
        "summary": "abandon dry-run payment",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "abandonDryRunPayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/purchases/{topic}/{purchaseId}/payments/free": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "topic",
          "schema": {
            "$ref": "#/components/schemas/PurchaseTopicEnum"
          }
        },
        {
          "in": "path",
          "required": true,
          "name": "purchaseId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "start free payment for specific purchase",
        "description": "( can't find purchase -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "startFreePayment",
        "tags": [
          "payment"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to process"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/banners/types/{bannerType}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "bannerType",
          "schema": {
            "$ref": "#/components/schemas/BannerTypeEnum"
          }
        }
      ],
      "get": {
        "summary": "get banners",
        "operationId": "getBanners",
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "banner list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/banners/category/{categoryId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "categoryId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get banners for category",
        "operationId": "getCategoryBanners",
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "banner list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/banners/brand-promotion": {
      "get": {
        "summary": "get banners for brand-promotion",
        "operationId": "getBrandPromotionBanners",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "brandSourcingTagIdOfPromotedChannelGroup",
            "description": "구매채널관 그룹에 해당하는 브랜드 소싱 tag의 id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "banner list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/banners/brand/{brandId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "brandId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get banner for brand",
        "operationId": "getBrandBanners",
        "tags": [
          "banner"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "banner list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/collections/{collectionId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "collectionId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get collection",
        "description": "( can't find collection -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getCollection",
        "tags": [
          "collection"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- collection\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/search/products": {
      "get": {
        "summary": "search products",
        "operationId": "searchProducts",
        "tags": [
          "search"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "If orderBy is not given, orderBy would be set MATCHING_SCORE_DESC as a default value.",
            "name": "orderBy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ProductSearchingOrderByEnum"
            }
          },
          {
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categoryIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "brandId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "brandIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "minPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "maxPrice",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "description": "필터링할 상품 속성 id 목록",
            "required": false,
            "name": "productFeatureIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "deprecated": true,
            "required": false,
            "description": "(DEPRECATED) enabledTotalCount, enabledProductFeatureAggreagtion, enabledProductCategoryAggregation, enabledBrandAggregation 를 사용하세요.",
            "name": "enabledProductAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 전체 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledTotalCount",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 상품 속성별 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledProductFeatureAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 상품 카테고리별 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledProductCategoryAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "상품 집계(aggregation)에서 브랜드별 개수가 필요한 경우 true로 설정한다.",
            "name": "enabledBrandAggregation",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "required": false,
            "description": "검색과 관련된 특정 피쳐를 적용시에 실험을 위해 필요한 필드이다.",
            "name": "keywordSearchExperimentIds",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "- searched products\n- 퀸잇 즉시 할인이 적용되는 경우 `AppProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/autocomplete": {
      "get": {
        "summary": "get autocomplete candidates",
        "operationId": "getAutocompleteCandidates",
        "tags": [
          "autocomplete"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "autocomplete query"
          },
          {
            "in": "query",
            "name": "brandSize",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "description": "required brand autocomplete candidate size"
          }
        ],
        "responses": {
          "200": {
            "description": "get autocomplete list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutocompleteResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/couponBooks/{couponBookCode}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponBookCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupon book",
        "description": "( can't find coupon book -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getCouponBook",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "coupon book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponBookDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/couponBooks/{couponBookCode}/asset": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponBookCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupon book asset",
        "description": "( can't find coupon book -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )",
        "operationId": "getCouponBookAsset",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "coupon book asset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponBookAssetDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/couponBooks/{couponBookCode}/coupons": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponBookCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "issue all coupons in coupon book",
        "description": "( can't find coupon book -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )\n( there are no coupons could be issued -> ApiErrorResponseCode.COUPON_BOOK_ISSUABLES_NOT_EXIST )\n",
        "operationId": "issueAllCouponsInCouponBook",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "issued coupons by coupon book",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/coupons/displays/products/{productId}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "productId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupons by display product",
        "operationId": "listDisplayingCouponsForProduct",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get coupons by display product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "issue all coupons by display product",
        "operationId": "issueAllDisplayingCoupons",
        "description": "( there are no display coupons to issue -> ApiErrorResponseCode.DISPLAYING_COUPONS_ISSUABLE_NOT_EXIST )\n",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to issue",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/coupons/displays/products/{productId}/v2": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "productId",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupons by display product v2",
        "operationId": "listDisplayingCouponsForProductV2",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get coupons by display product v2",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCouponListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/coupons/{couponCode}": {
      "parameters": [
        {
          "in": "path",
          "required": true,
          "name": "couponCode",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get coupon by coupon code",
        "operationId": "getCouponByCode",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "coupon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponDetailDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "issue coupon",
        "description": "( can't find coupon -> ApiErrorResponseCode.RESOURCE_NOT_FOUND )\n( coupon is disabled -> ApiErrorResponseCode.COUPON_NOT_ENABLED )\n( before coupon issue begin date -> ApiErrorResponseCode.COUPON_ISSUE_BEFORE_BEGIN )\n( after coupon issue end date -> ApiErrorResponseCode.COUPON_ISSUE_AFTER_END )\n( exceed max coupon issue count -> ApiErrorResponseCode.COUPON_ISSUE_LIMIT_EXCEEDED )\n( exceed max coupon issue count per user -> ApiErrorResponseCode.COUPON_ISSUE_LIMIT_PER_USER_EXCEEDED )\n( not target to coupon issue -> ApiErrorResponseCode.COUPON_ISSUE_NOT_TARGET )\n",
        "operationId": "issueCoupon",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to issue"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/coupons": {
      "get": {
        "summary": "get my issued coupons",
        "operationId": "getIssuedCoupons",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "issued coupons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IssuedCouponDto"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/coupons/first-kakao-login/issuable": {
      "get": {
        "summary": "check current user can issue first kakao login coupon",
        "operationId": "checkFirstKakaoLoginCouponIssueable",
        "tags": [
          "coupon"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "check first kakao login coupon is issuable with current user's phone number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckFirstKakaoLoginCouponIssuableResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/shop-live/authorize": {
      "post": {
        "summary": "generate shop live token with username",
        "operationId": "generateShopLiveAccessToken",
        "tags": [
          "shopLive"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopLiveTokenRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success to generate shop live token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopLiveTokenResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/shop-live/campaigns/upcoming": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "includeOnAir",
            "description": "현재 진행중인 방송 정보가 있을 경우 이 캠페인의 정보를 가져올 지 여부. false인 경우 현재 이후의 예정된 방송 정보만 조회",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "includePrivate",
            "description": "모아보기 비공개로 설정한 캠페인의 정보도 조회할 것인지 여부",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "summary": "현재 이후의 가장 가까운 시간에 예정된 방송 혹은 (조건에 따라) 현재 진행중 방송이 있을 경우 해당 방송의 정보를 반환",
        "operationId": "getUpcomingCampaign",
        "tags": [
          "shopLive"
        ],
        "responses": {
          "200": {
            "description": "success to get upcoming campaign info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopLiveCampaignResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/shop-live/campaigns/{campaignKey}/metadata": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "campaignKey",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resolutionLevel",
            "description": "해상도 레벨",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "summary": "개별 방송(캠페인)의 상태, live stream URL 등의 요약 정보를 조회",
        "operationId": "getCampaignMetadata",
        "tags": [
          "shopLive"
        ],
        "responses": {
          "200": {
            "description": "success to get campaign metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopLiveCampaignMetadataResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/points": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/querySize"
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "epochSeconds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pointType",
            "description": "적립 타입 / null = 전체 조회",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PointAmountTypeEnum"
            }
          }
        ],
        "summary": "사용자의 적립금 히스토리를 조회합니다.",
        "operationId": "getPointHistory",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to get point hisotry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PointHistoryBundleResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/points/now-usable": {
      "get": {
        "summary": "사용자의 현재 사용가능한 적립금을 조회합니다.",
        "operationId": "getNowUsablePoint",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to get now usable point",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NowUsablePointDto"
                }
              }
            }
          }
        }
      }
    },
    "/points/promotions/{code}/attend": {
      "put": {
        "summary": "적립금 프로모션 이벤트에 참석합니다.",
        "operationId": "attendPromotion",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "code",
            "description": "프로모션 코드",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success to attend promotion"
          }
        }
      },
      "get": {
        "summary": "적립금 프로모션 이벤트 참석여부를 조회합니다.",
        "operationId": "getAttendPromotionState",
        "tags": [
          "point"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "code",
            "description": "프로모션 코드",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success to query attend promotion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionAttendedStateDto"
                }
              }
            }
          }
        }
      }
    },
    "/product-rankings/{productId}/is-category-best-product": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "카테고리 베스트 상품인 지의 유무를 조회",
        "operationId": "findCategoryBestProduct",
        "tags": [
          "productRanking"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "success to get category best product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryBestProductDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/code": {
      "get": {
        "summary": "초대 코드 조회 API",
        "description": "referrer 의 초대코드를 반환. 최초 요청시 생성 후 반환한다.",
        "operationId": "getReferralCode",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "추천 코드",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralCodeDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user/reward/policy": {
      "get": {
        "summary": "유저 초대 보상 정책 조회 API",
        "operationId": "getUserReferralPolicy",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "유저 초대 보상 정책 조회 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralRewardPolicyDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user-referral/summary": {
      "get": {
        "summary": "유저 초대 요약 정보 조회 API",
        "operationId": "getUserReferralSummary",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "유저 초대 요약 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralSummaryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user-referral/bonus-box/open": {
      "post": {
        "summary": "유저레퍼럴로 적립한 보너스 박스를 까는 API",
        "description": "유저레퍼럴 보너스 박스를 1개 여는 API",
        "operationId": "openUserReferralBonusBox",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "보너스 박스 오픈 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralBonusBoxOpenResultDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user/reward/summary": {
      "get": {
        "summary": "유저 초대 보상 요약 정보 조회 API -> `getUserReferralSummary` 사용",
        "operationId": "getUserReferralRewardSummary",
        "deprecated": true,
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "유저 초대로 받은 누적 보상 조회 결과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralRewardSummaryDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user/reward/estimate": {
      "post": {
        "summary": "유저 추천 보상 예상 API",
        "description": "- 추천인(referrer)이 보상으로 얻을 수 있는 포인트 예상 결과를 조회하는 API (최대 50개 처리)\n- `Global PhoneNumber 형식의 한국번호`를 넘겨주어야 한다 (예 '+821012341234')\n",
        "operationId": "estimateUserReferralRewards",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserReferralRewardEstimationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "referrer 가 받을 수 있는 초대 보상 리스트",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferralRewardEstimationListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user": {
      "post": {
        "summary": "유저 추천 API",
        "operationId": "createUserReferral",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserReferralRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "유저 추천 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserReferralResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/user/referred-user-join": {
      "post": {
        "summary": "추천받은 유저 가입완료 API",
        "operationId": "joinReferredUser",
        "description": "추천받은 유저가 referral link 를 통해 가입완료 후 해당 API 호출",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinReferredUserRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "추천 유저 가입 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinReferredUserResponseDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/referral/product": {
      "post": {
        "summary": "추천상품 구매완료 API",
        "operationId": "createProductReferral",
        "tags": [
          "referral"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductReferralRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "상품 추천 링크를 통해 상품 구매 시 ProductReferral 을 생성하는 API 입니다."
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/games": {
      "get": {
        "summary": "현재 진행중인 게임 목록",
        "operationId": "getGameList",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "게임 목록",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveGameListResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/games/{gameId}": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "유저 게임 정보 조회",
        "operationId": "getGameProgressInfo",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "유저 게임 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameUserProgressInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "1차 재화 소비",
        "operationId": "useInGameCredit",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameUseInGameCreditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "유저 게임 정보",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameUserProgressInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/games/{gameId}/achieve": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "게임 클리어 보상 획득",
        "operationId": "achieveGame",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameAchieveRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "게임 클리어 완료"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/games/{gameId}/missions": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "미션 목록 및 미션 진행 상황 조회",
        "operationId": "getMissions",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "미션 목록 및 미션 진행 상황",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMissionsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      },
      "post": {
        "summary": "미션 완료 요청",
        "operationId": "achieveMission",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GameMissionAchieveRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "미션 완료"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/games/{gameId}/missions/{missionId}": {
      "parameters": [
        {
          "in": "path",
          "name": "gameId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "missionId",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "summary": "미션 보상 수령",
        "operationId": "receiveReward",
        "tags": [
          "gamification"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "미션 보상",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMissionRewardReceiveResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/categories/{categoryId}/review-guide": {
      "parameters": [
        {
          "in": "path",
          "name": "categoryId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "get category's review guide",
        "operationId": "getProductCategoryReviewGuide",
        "tags": [
          "review"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "product category review guide",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCategoryReviewGuideDataDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/style-shots": {
      "get": {
        "summary": "get all style shots",
        "operationId": "getAllStyleShots",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/queryCursor"
          },
          {
            "$ref": "#/components/parameters/querySize"
          }
        ],
        "responses": {
          "200": {
            "description": "get all style shots",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleShotListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/style-shots/{id}": {
      "get": {
        "summary": "get style shot by id",
        "operationId": "getStyleShotById",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get style shot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleShotDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/style-shots/categories": {
      "get": {
        "summary": "get all style category",
        "operationId": "getAllStyleCategory",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "get all style category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StyleCategoryListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/style-shots/{id}/equipped-products": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get equipped product list by product item ids",
        "description": "스타일 샷 ID로 착용 상품 조회",
        "operationId": "getEquippedProductListByStyleShotId",
        "tags": [
          "styleShot"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- products and product items (unique and not ordered) by product item ids\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n- 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EquippedProductListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/delivery-prediction": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get delivery completed prediction dates and probability by product id",
        "description": "ProductId를 통해 예상 배송 완료 시점 데이터를 조회합니다.",
        "operationId": "getDeliveryPrediction",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get delivery completed expectation data\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryPredictionListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/purchase-measurements-statistics": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get purchase measurements statistics by product id",
        "description": "상품 ID로 구매 통계 조회",
        "operationId": "getPurchaseMeasurementsStatistics",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get purchase measurements statistics\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseMeasurementsStatisticsListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/products/{productId}/purchase-measurements": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "productId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "get purchase measurements by product id(limit 5)",
        "description": "상품 ID로 구매 통계 조회(로우 데이터)",
        "operationId": "getPurchaseMeasurements",
        "tags": [
          "product"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "responses": {
          "200": {
            "description": "- get purchase measurements\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseMeasurementsDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/attendance-checks/{id}/histories": {
      "get": {
        "summary": "get attendance check histories",
        "operationId": "getAttendanceCheckHistories",
        "tags": [
          "attendanceCheck"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "출석체크 ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get attendance check histories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceCheckHistoryListDto"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    },
    "/attendance-checks/{id}/attend": {
      "post": {
        "summary": "attend attendance check",
        "description": "- 이미 출석 시 에러 코드: ALREADY_EXISTS(1)\n- 출석 체크 완료 시 에러 코드: ATTENDANCE_CHECK_COMPLETED(8001)\n- 이벤트 종료 시 에러 코드: RESOURCE_NOT_FOUND(4)\n",
        "operationId": "attendAttendanceCheck",
        "tags": [
          "attendanceCheck"
        ],
        "security": [
          {
            "damoa-token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "description": "출석체크 ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success to attend attendance check"
          },
          "400": {
            "$ref": "#/components/responses/ApiFailure"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "damoa-token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "ApiFailure": {
        "description": "failed to get response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiErrorResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "queryCursor": {
        "in": "query",
        "name": "cursor",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "queryPage": {
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "querySize": {
        "in": "query",
        "name": "size",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "queryOrderBy": {
        "in": "query",
        "name": "orderBy",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "schemas": {
      "BooleanDto": {
        "type": "object",
        "description": "to overcome oag bug that primitive api response does not converted from string in TS.",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "RequiredLongDto": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LongDto": {
        "type": "object",
        "description": "to overcome oag bug that primitive api response does not converted from long in TS.",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LongRangeDto": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "format": "int64"
          },
          "max": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RequiredBooleanDto": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "MetadataDto": {
        "type": "object",
        "required": [
          "version",
          "serverStatus"
        ],
        "properties": {
          "version": {
            "$ref": "#/components/schemas/VersionDto"
          },
          "serverStatus": {
            "$ref": "#/components/schemas/ServerStatusDto"
          }
        }
      },
      "VersionDto": {
        "type": "object",
        "required": [
          "minVersion",
          "minBuildNumber"
        ],
        "properties": {
          "minVersion": {
            "type": "string",
            "description": "minimum required version to show"
          },
          "minBuildNumber": {
            "type": "integer",
            "format": "int32",
            "description": "minimum required build number"
          },
          "updateUrl": {
            "type": "string",
            "description": "update url"
          }
        }
      },
      "BestPeriodEnum": {
        "type": "string",
        "enum": [
          "DAILY",
          "WEEKLY",
          "MONTHLY"
        ]
      },
      "ProductTagEnum": {
        "deprecated": true,
        "description": "상품 태그 정보.\nSHOPPING_MALL -> 쇼핑몰 상품\nDISCOUNT_PROMOTION -> 특가 상품\n",
        "type": "string",
        "enum": [
          "SHOPPING_MALL",
          "DISCOUNT_PROMOTION"
        ]
      },
      "AgeGroupCodeEnum": {
        "description": "연령대 코드. 노션 참고 -> https://www.notion.so/rapportlabs/5d323300ed8a457da25b889fdc9c986c",
        "type": "string",
        "enum": [
          "AG0",
          "AG1",
          "AG2",
          "AG3",
          "AG4",
          "AG5",
          "AG6"
        ]
      },
      "ServerStatusDto": {
        "type": "object",
        "required": [
          "serverState"
        ],
        "properties": {
          "serverState": {
            "$ref": "#/components/schemas/ServerStateEnum"
          },
          "serverMaintenanceReason": {
            "type": "string",
            "description": "server maintenance reason"
          },
          "serverMaintenanceStartedAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "server maintenance start time"
          },
          "serverMaintenanceEndedAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "server maintenance end time"
          }
        }
      },
      "PlatformEnum": {
        "type": "string",
        "enum": [
          "ANDROID",
          "IOS"
        ]
      },
      "ServerStateEnum": {
        "type": "string",
        "enum": [
          "OPERATIONAL",
          "MAINTENANCE"
        ],
        "description": "server status enum"
      },
      "SendVerifCodeRequestDto": {
        "type": "object",
        "required": [
          "phoneNumber"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "phone number to send verif code"
          }
        }
      },
      "SendVerifCodeResponseDto": {
        "type": "object",
        "required": [
          "verifyingToken",
          "expirationMillis"
        ],
        "properties": {
          "verifyingToken": {
            "type": "string"
          },
          "expirationMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VerifyCodeRequestDto": {
        "type": "object",
        "required": [
          "verifyingToken",
          "verifCode"
        ],
        "properties": {
          "verifyingToken": {
            "type": "string"
          },
          "verifCode": {
            "type": "string"
          }
        }
      },
      "VerifyCodeResponseDto": {
        "type": "object",
        "required": [
          "verifiedToken"
        ],
        "properties": {
          "verifiedToken": {
            "type": "string"
          }
        }
      },
      "VerifyKakaoTokenRequestDto": {
        "type": "object",
        "required": [
          "kakaoAccessToken",
          "phoneNumber"
        ],
        "properties": {
          "kakaoAccessToken": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "VerifyKakaoTokenResponseDto": {
        "type": "object",
        "required": [
          "verifiedToken"
        ],
        "properties": {
          "verifiedToken": {
            "type": "string"
          }
        }
      },
      "SignUpRequestDto": {
        "type": "object",
        "required": [
          "verifiedToken"
        ],
        "properties": {
          "verifiedToken": {
            "type": "string"
          }
        }
      },
      "SignUpResponseDto": {
        "type": "object",
        "required": [
          "firebaseToken"
        ],
        "properties": {
          "firebaseToken": {
            "type": "string"
          }
        }
      },
      "DamoaTokenDto": {
        "type": "object",
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "1시간 뒤에 만료됨"
          },
          "refreshToken": {
            "type": "string",
            "description": "180일 뒤에 만료됨"
          }
        }
      },
      "DamoaTokenRefreshRequestDto": {
        "type": "object",
        "required": [
          "refreshToken"
        ],
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LoginAccountDto": {
        "type": "object",
        "required": [
          "uid",
          "userRole",
          "createdAtMillis",
          "isKakaoLoginUser"
        ],
        "properties": {
          "uid": {
            "type": "string"
          },
          "userRole": {
            "$ref": "#/components/schemas/UserRoleEnum"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "phoneNumber": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isKakaoLoginUser": {
            "type": "boolean"
          }
        }
      },
      "FirebaseAuthUserMigrationRequest": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "ProviderTypeEnum": {
        "type": "string",
        "enum": [
          "SMS",
          "KAKAO"
        ]
      },
      "UserRoleEnum": {
        "type": "string",
        "enum": [
          "ANONYMOUS",
          "IDENTIFIED_USER"
        ]
      },
      "BestBrandListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BestBrandDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "BestBrandDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "logo"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/BrandLogoDto"
          },
          "bestProducts": {
            "$ref": "#/components/schemas/BestProductListOfBrandDto"
          }
        }
      },
      "BestProductListOfBrandDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BestProductOfBrandDto"
            }
          }
        }
      },
      "BestProductOfBrandDto": {
        "type": "object",
        "required": [
          "title",
          "productId",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "finalPrice"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TagListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "description": "태그 목록",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            }
          }
        }
      },
      "TagDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "tag의 이름",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TagTypeEnum"
          }
        }
      },
      "TagTypeEnum": {
        "description": "태그가 붙을 수 있는 것들의 종류. 같은 group 이름이더라도 type이 다르면 다른 그룹으로 취급한다.",
        "type": "string",
        "enum": [
          "BRAND_SOURCING",
          "PRODUCT"
        ]
      },
      "TagGroupListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "description": "태그 그룹 목록",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagGroupDto"
            }
          }
        }
      },
      "TagGroupDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type"
        ],
        "properties": {
          "id": {
            "description": "태그의 group id",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "태그의 group name(ex. 생산년도)",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TagTypeEnum"
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "required": [
          "productId",
          "mallId",
          "mallProductCode",
          "mallName",
          "url",
          "imageUrl",
          "multiResolutionImage",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "name",
          "finalPrice",
          "discountPercentage",
          "productPriceDetail",
          "brand",
          "rating",
          "salesStatus"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "logoUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo2xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo3xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64",
            "description": "- `productPriceDetail`에서의 `directCouponAppliedFinalPrice`, 다만 null이라면 `finalPrice`\n"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32",
            "description": "- `originalPrice` 대비 `finalPrice` 대비\n"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "이 필드값이 `false`인 경우 -> 품절로 표시"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          }
        }
      },
      "AppProductDto": {
        "type": "object",
        "required": [
          "productId",
          "mallId",
          "mallProductCode",
          "mallName",
          "url",
          "imageUrl",
          "multiResolutionImage",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "name",
          "finalPrice",
          "discountPercentage",
          "productPriceDetail",
          "brand",
          "rating",
          "salesStatus",
          "myBodySizesFromItems"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "이 필드값이 `false`인 경우 -> 품절로 표시"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "myBodySizesFromItems": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EquippedProductDto": {
        "type": "object",
        "required": [
          "productId",
          "productItem",
          "mallId",
          "mallProductCode",
          "mallName",
          "url",
          "imageUrl",
          "multiResolutionImage",
          "thumbnailUrl",
          "multiResolutionThumbnail",
          "name",
          "finalPrice",
          "discountPercentage",
          "productPriceDetail",
          "brand",
          "rating",
          "salesStatus",
          "favorite"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "productItem": {
            "$ref": "#/components/schemas/ProductItemDto"
          },
          "mallId": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "mallProductCode": {
            "type": "string"
          },
          "mallName": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "logoUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo2xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "logo3xUrl": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "url": {
            "type": "string",
            "description": "DEPRECATED"
          },
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "thumbnailUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "name": {
            "type": "string"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64",
            "description": "- `productPriceDetail`에서의 `directCouponAppliedFinalPrice`, 다만 null이라면 `finalPrice`\n"
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int32",
            "description": "- `originalPrice` 대비 `finalPrice` 대비\n"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "brand": {
            "type": "string"
          },
          "display": {
            "type": "boolean",
            "description": "이 필드값이 `false`인 경우 -> 품절로 표시"
          },
          "reviewRatingAvg": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/ProductCategoryDto"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "deliveryPolicy": {
            "$ref": "#/components/schemas/DeliveryPolicyDto"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "favorite": {
            "type": "boolean",
            "default": false,
            "description": "찜하기 여부"
          }
        }
      },
      "AppAdvertisementProductDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AppProductDto"
          }
        ]
      },
      "ProductPriceDetailDto": {
        "type": "object",
        "description": "- 기존 상품에 설정된 가격과, 즉시 할인이 적용된 가격 등에 대한 상세 정보를 제공하기 위한 dto\n  - `ProductDto`, `AppProductDto`, `FavoriteProductDto` 등에서 확인할 수 있는 상품 가격에 대한 상세 정보\n\n> 퀸잇 즉시 할인이 적용되는 경우에는 기존의 dto에서 나타내던 상품 가격이 퀸잇 즉시 할인가로 덮어씌워지게 됨\n",
        "required": [
          "finalPrice"
        ],
        "properties": {
          "originalPrice": {
            "description": "- 정가\n- 이 필드의 값이 `null`인 경우 -> `finalPrice`가 정가의 의미를 함께 갖게됨\n",
            "type": "integer",
            "format": "int64"
          },
          "finalPrice": {
            "description": "- 판매가 (실제 사용자가 상품을 구매하게 되는 가격)\n  - 퀸잇 즉시 할인 쿠폰이 적용되지 않은 판매가 정보를 나타냄\n  - 상품 등록시에 입력한 판매가를 나타냄\n- `originalPrice`, `discountPercentage` 필드 값이 `null`인 경우 -> 이 필드가 정가의 의미를 함께 갖게됨\n",
            "type": "integer",
            "format": "int64"
          },
          "discountPercentage": {
            "description": "- 할인 비율 -> `originalPrice` 대비 `finalPrice` 비율\n- 이 필드의 값이 `null`인 경우 -> `finalPrice`가 정가의 의미를 함께 갖게됨\n",
            "type": "integer",
            "format": "int32"
          },
          "originalToDirectCouponDiscountPercentage": {
            "description": "- 할인 비율 -> `originalPrice` 대비 `directCouponAppliedFinalPrice` 비율 (즉시할인 쿠폰이 할인한 비율)\n- 이 필드의 값이 `null`인 경우 -> 즉시 할인이 적용되지 않은 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int32"
          },
          "finalToDirectCouponDiscountPercentage": {
            "description": "- 할인 비율 -> `finalPrice` 대비 `directCouponAppliedFinalPrice` 비율 (즉시할인 쿠폰이 할인한 비율)\n- 이 필드의 값이 `null`인 경우 -> 즉시 할인이 적용되지 않은 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int32"
          },
          "directCouponAppliedFinalPrice": {
            "description": "- 퀸잇 즉시 할인 쿠폰이 적용된 최종 구매 가격\n- 이 필드의 값이 `null`인 경우 -> 즉시 할인이 적용되지 않은 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int64"
          },
          "originalToMaximumBenefitCouponPricePercentage": {
            "description": "- 할인 비율 -> `originalPrice` 대비 `maximumBenefitCouponAppliedFinalPrice` 비율 (최대 혜택 쿠폰이 할인한 비율)\n- 이 필드의 값이 `null`인 경우 -> 최대 혜택이 적용되지 않은 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int32"
          },
          "finalToMaximumBenefitCouponPricePercentage": {
            "description": "- 할인 비율 -> `finalPrice` 대비 `maximumBenefitCouponAppliedFinalPrice` 비율 (최대 혜택 쿠폰이 할인한 비율)\n- 이 필드의 값이 `null`인 경우 -> 최대 혜택이 적용되지 않은 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int32"
          },
          "maximumBenefitCouponAppliedFinalPrice": {
            "description": "- 최대 혜택 쿠폰이 적용된 최종 구매 가격\n- 이 필드의 값이 `null`인 경우 -> 최대 혜택 쿠폰이 적용되지 않은 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SalesStatusEnum": {
        "description": "- `ACTIVE` -> 판매중 - 현재 계속 판매중\n- `ARCHIVED` -> 판매 중지 - 당장은 판매를 중지하지만, 추후 판매될 여지가 있음을 나타냄\n- `PERMANENTLY_ARCHIVED` -> 영구 판매 중지 - 더이상 판매할 상품이 아님을 나타냄\n\n------------\n\n- 상품의 판매상태가 `ACTIVE`가 아닌 경우, 상세 페이지에서 품절로 표시한다\n- 상품 옵션의 판매상태가 `ACTIVE`가 아닌 경우\n  - 상품 옵션을 노출하지 않는다 (서버에서 필터링해서 내려줌)\n  - 장바구니에서는 품절 상태로 나타낸다 (클라이언트에서 필요)\n",
        "type": "string",
        "enum": [
          "ACTIVE",
          "ARCHIVED",
          "PERMANENTLY_ARCHIVED"
        ]
      },
      "ProductDiscountApplicationDto": {
        "description": "- 상품에 적용되거나 적용가능한 할인 정보를 제공하기 위한 DTO\n- 현재는 DirectCoupon(즉시할인쿠폰)정보만 담겨 있으나 추후에 다른 할인혜택이 추가됨에 따라 관련 DTO들이 추가될 수 있음\n- 즉시할인 쿠폰 중첩 적용이 가능해짐에 따라서 `appliedDirectCoupon`는 더이상 사용하면 안됨, `appliedDirectCoupons` 사용 필요\n",
        "type": "object",
        "properties": {
          "appliedDirectCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedDirectCouponDto"
            }
          },
          "appliedDirectCoupon": {
            "$ref": "#/components/schemas/AppliedDirectCouponDto"
          },
          "maximumDiscountCouponAppliedPrice": {
            "description": "- 최대 쿠폰 할인가가 적용된 가격\n- 이 필드의 값이 `null`인 경우 -> 최대 할인가를 계산하기 위한 조건을 만족하는 쿠폰이 없는 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AppliedDirectCouponDto": {
        "type": "object",
        "properties": {
          "endAtMillis": {
            "description": "즉시 할인 쿠폰 적용이 끝나는 시점을 나타냄",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductContentsDto": {
        "type": "object",
        "required": [
          "imageUrls",
          "multiResolutionImages",
          "descriptionPageUrl",
          "measurements",
          "classifications"
        ],
        "properties": {
          "imageUrls": {
            "description": "DEPRECATED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "descriptionPageUrl": {
            "type": "string"
          },
          "measurements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMeasurementDto"
            }
          },
          "classifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductClassificationDto"
            }
          },
          "announcement": {
            "$ref": "#/components/schemas/ProductAnnouncementDto"
          }
        }
      },
      "PersonalProductContentsDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductContentsDto"
          },
          {
            "type": "object",
            "required": [
              "sellerContentImages"
            ],
            "properties": {
              "measurements": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PersonalProductMeasurementDto"
                }
              },
              "sellerContentImages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SellerContentImagesDto"
                },
                "description": "셀러가 등록한 이미지"
              }
            }
          }
        ]
      },
      "ProductMeasurementDto": {
        "type": "object",
        "required": [
          "type",
          "unitOfLength",
          "headers",
          "rows"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ProductMeasurementTypeEnum"
          },
          "unitOfLength": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "PersonalProductMeasurementDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductMeasurementDto"
          },
          {
            "type": "object",
            "required": [
              "imageUrl"
            ],
            "properties": {
              "imageUrl": {
                "type": "string"
              }
            }
          }
        ]
      },
      "ProductMeasurementTypeEnum": {
        "type": "string",
        "enum": [
          "SHORTS",
          "SKIRT",
          "PANTS",
          "HOODIE",
          "TSHIRTS",
          "SWEATER",
          "SHIRTS",
          "DRESS",
          "JUMPER",
          "JACKET",
          "PADDED_JACKET",
          "COAT",
          "CARDIGAN"
        ]
      },
      "ProductClassificationDto": {
        "type": "object",
        "required": [
          "criterionId",
          "criterionText",
          "elements"
        ],
        "properties": {
          "criterionId": {
            "type": "string"
          },
          "criterionText": {
            "type": "string"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductClassificationElementDto"
            }
          }
        }
      },
      "ProductClassificationElementDto": {
        "type": "object",
        "required": [
          "name",
          "classified"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "classified": {
            "type": "boolean"
          }
        }
      },
      "ProductAnnouncementDto": {
        "type": "object",
        "required": [
          "apparelProductAnnouncement",
          "beautyProductAnnouncement"
        ],
        "properties": {
          "apparelProductAnnouncement": {
            "$ref": "#/components/schemas/ApparelProductAnnouncementDto"
          },
          "beautyProductAnnouncement": {
            "$ref": "#/components/schemas/BeautyProductAnnouncementDto"
          },
          "color": {
            "type": "string",
            "description": "(DEPRECATED) 색상"
          },
          "material": {
            "type": "string",
            "description": "(DEPRECATED) 소재"
          },
          "measurement": {
            "type": "string",
            "description": "(DEPRECATED) 치수"
          },
          "manufacturingCompany": {
            "type": "string",
            "description": "(DEPRECATED) 제조회사"
          },
          "manufacturingCountry": {
            "type": "string",
            "description": "(DEPRECATED) 제조국"
          },
          "manufacturingDate": {
            "type": "string",
            "description": "(DEPRECATED) 제조일자"
          },
          "qaStandards": {
            "type": "string",
            "description": "(DEPRECATED) 품질보증기준"
          },
          "customerCenterContact": {
            "type": "string",
            "description": "(DEPRECATED) A/S 책임자 및 전화번호"
          },
          "washingAndHandling": {
            "type": "string",
            "description": "(DEPRECATED) 세탁방법 및 취급시 주의사항"
          }
        }
      },
      "ApparelProductAnnouncementDto": {
        "type": "object",
        "description": "의류 관련 상품정보제공고시",
        "required": [
          "manufacturingCompany",
          "manufacturingCountry",
          "qaStandards",
          "customerCenterContact",
          "color",
          "material",
          "measurement",
          "manufacturingDate",
          "washingAndHandling"
        ],
        "properties": {
          "manufacturingCompany": {
            "type": "string",
            "description": "제조회사"
          },
          "manufacturingCountry": {
            "type": "string",
            "description": "제조국"
          },
          "qaStandards": {
            "type": "string",
            "description": "품질보증기준"
          },
          "customerCenterContact": {
            "type": "string",
            "description": "A/S 책임자 및 전화번호"
          },
          "color": {
            "type": "string",
            "description": "색상"
          },
          "material": {
            "type": "string",
            "description": "소재"
          },
          "measurement": {
            "type": "string",
            "description": "치수"
          },
          "manufacturingDate": {
            "type": "string",
            "description": "제조일자"
          },
          "washingAndHandling": {
            "type": "string",
            "description": "세탁방법 및 취급시 주의사항"
          }
        }
      },
      "BeautyProductAnnouncementDto": {
        "type": "object",
        "description": "화장품(뷰티) 관련 상품정보제공고시",
        "required": [
          "manufacturingCompany",
          "manufacturingCountry",
          "qaStandards",
          "customerCenterContact",
          "size",
          "responsibleSellerCompany",
          "usage",
          "highlights",
          "concerns",
          "expiration",
          "ingredients",
          "mfdsReview"
        ],
        "properties": {
          "manufacturingCompany": {
            "type": "string",
            "description": "제조회사"
          },
          "manufacturingCountry": {
            "type": "string",
            "description": "제조국"
          },
          "qaStandards": {
            "type": "string",
            "description": "품질보증기준"
          },
          "customerCenterContact": {
            "type": "string",
            "description": "A/S 책임자 및 전화번호"
          },
          "size": {
            "type": "string",
            "description": "화장품 용량"
          },
          "responsibleSellerCompany": {
            "type": "string",
            "description": "화장품 책임판매업자"
          },
          "usage": {
            "type": "string",
            "description": "사용 방법"
          },
          "highlights": {
            "type": "string",
            "description": "제품 주요 사양"
          },
          "concerns": {
            "type": "string",
            "description": "사용시 주의사항"
          },
          "expiration": {
            "type": "string",
            "description": "사용기한 또는 개봉 후 사용기한"
          },
          "ingredients": {
            "type": "string",
            "description": "성분 (화장품법에 따라 기재, 표시하여야 하는 모든 성분)"
          },
          "mfdsReview": {
            "type": "string",
            "description": "식품의약품안전처 심사 필요 유무 (MFDS = Ministry of Food and Drug Safety)"
          }
        }
      },
      "ProductSetDto": {
        "type": "object",
        "required": [
          "set",
          "favoriteIds",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "set": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductListDto": {
        "type": "object",
        "required": [
          "list",
          "favoriteIds",
          "last",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FilteredPersonalizedProductRequestDto": {
        "type": "object",
        "required": [
          "size"
        ],
        "properties": {
          "orderBy": {
            "$ref": "#/components/schemas/ProductOrderByEnum"
          },
          "cursor": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "string"
          },
          "brandId": {
            "type": "string"
          },
          "minPrice": {
            "type": "integer",
            "format": "int64"
          },
          "maxPrice": {
            "type": "integer",
            "format": "int64"
          },
          "ageGroupCode": {
            "$ref": "#/components/schemas/AgeGroupCodeEnum"
          },
          "mySizeOnly": {
            "type": "boolean",
            "default": false
          },
          "tag": {
            "$ref": "#/components/schemas/ProductTagEnum"
          },
          "tagId": {
            "type": "integer",
            "description": "(deprecated) use tagIdForBrandSourcing",
            "format": "int64"
          },
          "tagIdForBrandSourcing": {
            "description": "tagId에 대응되는 BrandSourcing 들에 대해 상품을 조회한다",
            "type": "integer",
            "format": "int64"
          },
          "recentlyClickedProducts": {
            "type": "array",
            "description": "최근 클릭된 상품들에 대한 정보. *갯수가 100을 넘을 수 없습니다.*",
            "items": {
              "$ref": "#/components/schemas/ClickedProductDto"
            }
          },
          "modelId": {
            "type": "string",
            "description": "- 어떤 개인화 모델을 사용할 것인지. (A/B Testing 용도)\n- 노션 참고: https://www.notion.so/rapportlabs/A-B-Protocol-c878d879ff0443cda929bb17d9b137c1\n"
          },
          "postProcessingId": {
            "type": "string",
            "description": "- 개인화 결과의 후처리를 어떻게 할 것인가. (A/B Testing 용도)\n- 노션 참고: https://www.notion.so/rapportlabs/A-B-Protocol-c878d879ff0443cda929bb17d9b137c1\n"
          }
        }
      },
      "ClickedProductDto": {
        "type": "object",
        "required": [
          "id",
          "clickedAtMillis"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "clickedAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "상품이 클릭됐었던 시간 (millis)"
          }
        }
      },
      "AppProductListDto": {
        "type": "object",
        "required": [
          "list",
          "favoriteIds",
          "last",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "productAggregation": {
            "$ref": "#/components/schemas/ProductAggregationDto"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AppAdvertisementProductListDto": {
        "type": "object",
        "required": [
          "favoriteIds",
          "list",
          "totalPageCount",
          "totalElementCount",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppAdvertisementProductDto"
            }
          },
          "favoriteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalPageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalElementCount": {
            "type": "integer",
            "format": "int64"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PersonalProductDto": {
        "type": "object",
        "required": [
          "product",
          "favorite",
          "freeReturnTarget",
          "discountInfo"
        ],
        "properties": {
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "favorite": {
            "type": "boolean"
          },
          "categoriesFromRoot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          },
          "contents": {
            "$ref": "#/components/schemas/PersonalProductContentsDto"
          },
          "mappedBrand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "discountInfo": {
            "$ref": "#/components/schemas/ProductDiscountApplicationDto"
          },
          "freeReturnTarget": {
            "type": "boolean"
          }
        }
      },
      "HomeProductCategoryDto": {
        "type": "object",
        "required": [
          "topSideCategories",
          "bottomSideCategories"
        ],
        "properties": {
          "topSideCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          },
          "bottomSideCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          }
        }
      },
      "ProductCategoryDto": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "iconUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionIcon": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "MallDto": {
        "type": "object",
        "required": [
          "mallId",
          "title"
        ],
        "properties": {
          "mallId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "logo2xUrl": {
            "type": "string"
          },
          "logo3xUrl": {
            "type": "string"
          }
        }
      },
      "FavoriteProductDto": {
        "type": "object",
        "required": [
          "id",
          "mallId",
          "mallName",
          "mallProductCode",
          "itemImageUri",
          "itemThumbnailUri",
          "brandName",
          "productName",
          "productDiscountRate",
          "price",
          "productPriceDetail",
          "shopUri",
          "createdAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "mallId": {
            "type": "string"
          },
          "mallName": {
            "type": "string"
          },
          "mallProductCode": {
            "type": "string"
          },
          "itemImageUri": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionItemImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "itemThumbnailUri": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionItemThumbnail": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "brandName": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productDiscountRate": {
            "type": "integer",
            "format": "int32"
          },
          "originalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "productPriceDetail": {
            "$ref": "#/components/schemas/ProductPriceDetailDto"
          },
          "shopUri": {
            "type": "string"
          },
          "shopLogoUri": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "FavoriteProductListDto": {
        "type": "object",
        "required": [
          "list",
          "last",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoriteProductDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductItemListDto": {
        "type": "object",
        "required": [
          "options",
          "optionElements",
          "productItems"
        ],
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionDto"
            }
          },
          "optionElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptionElementDto"
            }
          },
          "productItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductItemDto"
            }
          }
        }
      },
      "ProductReleaseEstimateDto": {
        "type": "object",
        "required": [
          "productId",
          "itemReleaseEstimateAtList"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "description": "상품 ID"
          },
          "itemReleaseEstimateAtList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductItemReleaseEstimateDto"
            }
          }
        }
      },
      "ProductItemReleaseEstimateDto": {
        "type": "object",
        "required": [
          "productItemId",
          "releaseEstimateAt"
        ],
        "properties": {
          "productItemId": {
            "type": "string",
            "description": "상품 옵션 ID"
          },
          "itemReleaseEstimateAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "yyyy-mm-dd 형식의 출고 일자"
          }
        }
      },
      "ProductItemDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "optionElementIds",
          "price",
          "display",
          "salesStatus",
          "mallProductItemCode"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "releaseAtEstimate": {
            "type": "string",
            "description": "yyyy-mm-dd 형식의 출고 일자"
          },
          "optionElementIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxQuantity": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "integer",
            "format": "int64"
          },
          "display": {
            "type": "boolean",
            "description": "- 상품 옵션의 노출 여부를 나타낸다\n- false이면 품절 상태로 나타낸다\n"
          },
          "salesStatus": {
            "$ref": "#/components/schemas/SalesStatusEnum"
          },
          "mallProductItemCode": {
            "type": "string"
          }
        }
      },
      "OptionDto": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "OptionElementDto": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ProductItemAvailabilityDto": {
        "type": "object",
        "required": [
          "productId",
          "productItemId",
          "available"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "productItemId": {
            "type": "string"
          },
          "quantity": {
            "description": "- 상품 옵션 재고\n- 이 값이 `null`인 경우 -> 내부적으로 재고가 무제한인 것으로 간주\n- 이 값만으로는 상품의 구매 가능 여부를 판단할 수 없음 -> `ProductItemAvailabilityDto.available` 값이 중요\n",
            "type": "integer",
            "format": "int64"
          },
          "available": {
            "description": "상품 구매 가능 여부 (product ~ product item의 값을 통해서 계산된 값)",
            "type": "boolean"
          }
        }
      },
      "BrandListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandDto"
            }
          }
        }
      },
      "BrandDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "logo"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/BrandLogoDto"
          }
        }
      },
      "BrandLogoDto": {
        "type": "object",
        "properties": {
          "landscapeUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionLandscape": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "squareUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionSquare": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "BrandDetailDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BrandDto"
          },
          {
            "type": "object",
            "required": [
              "categories"
            ],
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductCategoryDto"
                }
              }
            }
          }
        ]
      },
      "BrandProductsDto": {
        "type": "object",
        "required": [
          "brand",
          "list"
        ],
        "properties": {
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          }
        }
      },
      "BrandProductsListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandProductsDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "AddToCartRequestDto": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddCartItemDto"
            }
          }
        }
      },
      "AddToCartResponseDto": {
        "type": "object",
        "required": [
          "cartItemIds"
        ],
        "properties": {
          "cartItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AddCartItemDto": {
        "type": "object",
        "required": [
          "productItemId",
          "quantity"
        ],
        "properties": {
          "productItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeleteCartItemsRequestDto": {
        "type": "object",
        "required": [
          "cartItemIds"
        ],
        "properties": {
          "cartItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CartItemGroupDto": {
        "type": "object",
        "required": [
          "groupId",
          "brand",
          "delivery",
          "items"
        ],
        "properties": {
          "groupId": {
            "type": "string"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "delivery": {
            "$ref": "#/components/schemas/CartItemGroupDeliveryPolicyDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemDto"
            }
          }
        }
      },
      "CartItemGroupDeliveryPolicyDto": {
        "type": "object",
        "required": [
          "defaultPrice",
          "defaultReturnCost",
          "shippingCostPolicy",
          "returnCostPolicy",
          "logisticsPolicy",
          "assorted",
          "shippingPolicyId"
        ],
        "properties": {
          "defaultPrice": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -> use `shippingCostPolicy`"
          },
          "requiredAmountForFree": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -> use `shippingCostPolicy`"
          },
          "defaultReturnCost": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -> use `returnCostPolicy`"
          },
          "shippingCostPolicy": {
            "$ref": "#/components/schemas/ShippingCostPolicyDto"
          },
          "returnCostPolicy": {
            "$ref": "#/components/schemas/ReturnCostPolicyDto"
          },
          "logisticsPolicy": {
            "$ref": "#/components/schemas/LogisticsPolicyDto"
          },
          "assorted": {
            "type": "boolean"
          },
          "shippingPolicyId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeliveryPolicyDto": {
        "type": "object",
        "required": [
          "defaultPrice",
          "defaultReturnCost",
          "shippingCostPolicy",
          "returnCostPolicy",
          "logisticsPolicy"
        ],
        "properties": {
          "defaultPrice": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -> use `shippingCostPolicy`"
          },
          "requiredAmountForFree": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -> use `shippingCostPolicy`"
          },
          "defaultReturnCost": {
            "type": "integer",
            "format": "int64",
            "description": "DEPRECATED -> use `returnCostPolicy`"
          },
          "shippingCostPolicy": {
            "$ref": "#/components/schemas/ShippingCostPolicyDto"
          },
          "returnCostPolicy": {
            "$ref": "#/components/schemas/ReturnCostPolicyDto"
          },
          "logisticsPolicy": {
            "$ref": "#/components/schemas/LogisticsPolicyDto"
          }
        }
      },
      "ShippingCostPolicyDto": {
        "type": "object",
        "description": "배송비 정책",
        "required": [
          "defaultCost",
          "jejuIsland",
          "backCountry"
        ],
        "properties": {
          "defaultCost": {
            "type": "integer",
            "format": "int64"
          },
          "jejuIsland": {
            "type": "integer",
            "format": "int64",
            "description": "제주도 추가 배송비"
          },
          "backCountry": {
            "type": "integer",
            "format": "int64",
            "description": "도서산간 추가 배송비"
          },
          "requiredAmountForFree": {
            "type": "integer",
            "format": "int64",
            "description": "무료 배송을 위한 최소 구매 금액"
          }
        }
      },
      "ReturnCostPolicyDto": {
        "type": "object",
        "description": "반품비 정책",
        "required": [
          "defaultCost",
          "jejuIsland",
          "backCountry"
        ],
        "properties": {
          "defaultCost": {
            "type": "integer",
            "format": "int64",
            "description": "additionalCost가 고려되지 않은 기본 반품 비용"
          },
          "jejuIsland": {
            "type": "integer",
            "format": "int64",
            "description": "제주도 추가 반품비"
          },
          "backCountry": {
            "type": "integer",
            "format": "int64",
            "description": "도서산간 추가 반품비"
          }
        }
      },
      "LogisticsPolicyDto": {
        "type": "object",
        "properties": {
          "shippingPlace": {
            "type": "string",
            "description": "출고지 주소"
          },
          "returnPlace": {
            "type": "string",
            "description": "반품지 주소"
          },
          "courier": {
            "deprecated": true,
            "type": "string",
            "description": "- DEPRECATED - `vendor` 필드를 사용해주세요\n- 이용 택배사\n"
          },
          "vendor": {
            "$ref": "#/components/schemas/LogisticsVendorEnum"
          }
        }
      },
      "LogisticsVendorEnum": {
        "description": "- (배송 정책 관련) 설정 가능한 택배사\n- `ETC (기타배송사)` -> 특정 배송사를 이용중이지만, 현재 지원하고 있지 않은 택배사 (기타배송사에 대한 지원이 필요한 경우, 별도 문의주세요)\n- `SELF_MANAGED (직접배송)` -> 직접 배송하는 경우에 사용\n",
        "type": "string",
        "enum": [
          "CJ대한통운",
          "로젠택배",
          "우체국택배",
          "한진택배",
          "롯데택배",
          "대신택배",
          "일양택배",
          "경동택배",
          "합동택배",
          "천일택배",
          "GS편의점택배",
          "한의사랑택배",
          "건영택배",
          "호남택배",
          "SLX",
          "CU편의점택배",
          "용마로지스",
          "세방택배",
          "원더스퀵",
          "농협택배",
          "HI택배",
          "홈픽택배",
          "CJ대한통운국제특송",
          "EMS",
          "롯데글로벌",
          "한덱스",
          "DHL",
          "FEDEX",
          "UPS",
          "TNT",
          "범한판토스",
          "ACI Express",
          "ACE Express",
          "은하쉬핑",
          "두발히어로",
          "로지스팟",
          "부릉(VROONG)",
          "이투마스",
          "에이스물류",
          "대림통운",
          "발렉스",
          "기타배송사",
          "직접배송"
        ],
        "x-enum-varnames": [
          "CJ_GLS",
          "LOGEN",
          "EPOST",
          "HANJIN",
          "LOTTE",
          "DAESIN",
          "ILYANG",
          "KYUNGDONG",
          "HAPDONG",
          "CHUNIL",
          "CVSNET",
          "HPL",
          "KUNYOUNG",
          "HONAM",
          "SLX",
          "BGF",
          "YONGMA",
          "SEBANG",
          "WONDERS",
          "NH_LOGIS",
          "HI_LOGIS",
          "HOMEPICK",
          "KOREX_G",
          "EMS",
          "LOTTE_GLOBAL",
          "HANDEX",
          "DHL",
          "FEDEX",
          "UPS",
          "TNT",
          "PANTOS",
          "ACI_EXPRESS",
          "ACE_EXP",
          "EUNHA",
          "CHAIN_LOGISTICS",
          "LOGISPOT",
          "VROONG",
          "ETOMARS",
          "VENDORPIA",
          "DAERIM",
          "VALEX",
          "ETC",
          "SELF_MANAGED"
        ]
      },
      "CartItemDto": {
        "type": "object",
        "description": "- `product.salesStatus != ACTIVE || product.display == false`인 경우 -> 품절로 표시\n- `productItem.salesStatus != ACTIVE || productItem.display == false`인 경우 -> 품절로 표시\n- 퀸잇 즉시 할인이 적용되는 경우 `ProductDto`에서 즉시 할인이 적용된 금액을 보여준다\n  - 영향 받는 필드: `finalPrice`, `discountPercentage`\n",
        "required": [
          "id",
          "product",
          "productItem",
          "quantity",
          "brand",
          "freeReturnTarget"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "productItem": {
            "$ref": "#/components/schemas/ProductItemDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "freeReturnTarget": {
            "type": "boolean"
          }
        }
      },
      "PurchaseTopicEnum": {
        "type": "string",
        "enum": [
          "PRODUCT"
        ]
      },
      "StartOrderRequestDto": {
        "type": "object",
        "required": [
          "cartItemIds"
        ],
        "properties": {
          "cartItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "StartOrderFromAddingRequestDto": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddCartItemDto"
            }
          }
        }
      },
      "DeliveryAddressDto": {
        "type": "object",
        "required": [
          "recipientName",
          "phoneNumber",
          "zipCode",
          "address",
          "detailedAddress"
        ],
        "properties": {
          "recipientName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string",
            "description": "5자리, 국가 기초 구역 번호 (State Basic District Number)"
          },
          "address": {
            "type": "string"
          },
          "detailedAddress": {
            "type": "string"
          }
        }
      },
      "UserRefundAccountDto": {
        "type": "object",
        "properties": {
          "refundAccount": {
            "$ref": "#/components/schemas/RefundAccountDto"
          }
        }
      },
      "RefundAccountDto": {
        "type": "object",
        "required": [
          "accountNumber",
          "bank",
          "holderName"
        ],
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/RefundAccountBankEnum"
          },
          "holderName": {
            "type": "string"
          }
        }
      },
      "ConnectPayPromotionDto": {
        "type": "object",
        "required": [
          "discountCards",
          "interestFreeCards"
        ],
        "properties": {
          "discountCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectPayDiscountCardDto"
            }
          },
          "interestFreeCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectPayInterestFreeCardsDto"
            }
          }
        }
      },
      "ConnectPayDiscountCardDto": {
        "type": "object",
        "required": [
          "card",
          "minimumPaymentAmount",
          "discountCode",
          "discountAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "maximumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "discountCode": {
            "description": "discount code should be passed when request payment with connect-pay",
            "type": "string"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ConnectPayInterestFreeCardsDto": {
        "type": "object",
        "required": [
          "card",
          "interestFreeMonths",
          "minimumPaymentAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "interestFreeMonths": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TossPaymentPromotionDto": {
        "type": "object",
        "required": [
          "discountCards",
          "interestFreeCards"
        ],
        "properties": {
          "discountCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TossPaymentDiscountPolicyDto"
            }
          },
          "interestFreeCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TossPaymentInterestFreePolicyDto"
            }
          }
        }
      },
      "TossPaymentDiscountPolicyDto": {
        "type": "object",
        "required": [
          "card",
          "minimumPaymentAmount",
          "discountCode",
          "discountAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "maximumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "discountCode": {
            "description": "discount code should be passed when request payment with toss",
            "type": "string"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TossPaymentInterestFreePolicyDto": {
        "type": "object",
        "required": [
          "card",
          "installmentFreeMonths",
          "minimumPaymentAmount"
        ],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "installmentFreeMonths": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "minimumPaymentAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TossPaymentAccountEnum": {
        "type": "string",
        "enum": [
          "농협",
          "우리",
          "신한",
          "국민",
          "하나",
          "씨티",
          "기업",
          "산업",
          "제일",
          "대구",
          "부산",
          "전북",
          "경남",
          "제주",
          "광주",
          "새마을",
          "수협",
          "신협",
          "우체국",
          "케이",
          "카카오",
          "저축",
          "산림",
          "UNKNOWN"
        ],
        "x-enum-varnames": [
          "NONGHYUP",
          "WOORI",
          "SHINHAN",
          "KOOKMIN",
          "HANA",
          "CITI",
          "INDUSTRIAL",
          "KDB",
          "SC",
          "DAEGU",
          "BUSAN",
          "JEONBUK",
          "KYONGNAM",
          "JEJU",
          "KWANGJU",
          "SAEMAEUL",
          "SUHYUP",
          "SHINHYUP",
          "POST",
          "K_BANK",
          "KAKAO_BANK",
          "SAVING_SB",
          "FORESTRY_SJ",
          "UNKNOWN"
        ]
      },
      "TossPaymentCardEnum": {
        "type": "string",
        "enum": [
          "신한",
          "현대",
          "삼성",
          "우리",
          "국민",
          "롯데",
          "농협",
          "하나",
          "BC",
          "씨티",
          "카카오뱅크",
          "KDB",
          "수협",
          "전북",
          "우체국",
          "새마을",
          "저축",
          "제주",
          "광주",
          "신협",
          "JCB",
          "유니온페이",
          "마스터",
          "비자",
          "다이너스",
          "디스커버",
          "UNKNOWN"
        ],
        "x-enum-varnames": [
          "SHINHAN",
          "HYUNDAI",
          "SAMSUNG",
          "WOORI",
          "KOOKMIN",
          "LOTTE",
          "NONGHYUP",
          "HANA",
          "BC",
          "CITI",
          "KAKAO_BANK",
          "KDB",
          "SUHYUP",
          "JEONBUK",
          "POST",
          "SAEMAEUL",
          "SAVING_SB",
          "JEJU",
          "KWANGJU",
          "SHINHYUP",
          "JCB",
          "UNION_PAY",
          "MASTER_CARD",
          "VISA",
          "DINERS_CLUB",
          "DISCOVER",
          "UNKNOWN"
        ]
      },
      "RefundAccountBankEnum": {
        "type": "string",
        "enum": [
          "농협",
          "국민",
          "우리",
          "신한",
          "기업",
          "하나",
          "경남",
          "대구",
          "부산",
          "수협",
          "우체국",
          "산업",
          "SC제일",
          "씨티",
          "광주",
          "제주",
          "전북",
          "새마을",
          "신협",
          "케이",
          "카카오"
        ],
        "x-enum-varnames": [
          "NONGHYUP",
          "KOOKMIN",
          "WOORI",
          "SHINHAN",
          "INDUSTRIAL",
          "HANA",
          "KYONGNAM",
          "DAEGU",
          "BUSAN",
          "SUHYUP",
          "POST",
          "KDB",
          "SC",
          "CITI",
          "KWANGJU",
          "JEJU",
          "JEONBUK",
          "SAEMAEUL",
          "SHINHYUP",
          "K_BANK",
          "KAKAO_BANK"
        ]
      },
      "BankNameEnum": {
        "type": "string",
        "description": "은행 이름",
        "enum": [
          "농협",
          "국민",
          "우리",
          "신한",
          "기업",
          "하나",
          "경남",
          "대구",
          "부산",
          "수협",
          "우체국",
          "산업",
          "SC제일",
          "씨티",
          "광주",
          "제주",
          "전북",
          "새마을",
          "신협",
          "케이",
          "카카오"
        ],
        "x-enum-varnames": [
          "NONGHYUP",
          "KOOKMIN",
          "WOORI",
          "SHINHAN",
          "INDUSTRIAL",
          "HANA",
          "KYONGNAM",
          "DAEGU",
          "BUSAN",
          "SUHYUP",
          "POST",
          "KDB",
          "SC",
          "CITI",
          "KWANGJU",
          "JEJU",
          "JEONBUK",
          "SAEMAEUL",
          "SHINHYUP",
          "K_BANK",
          "KAKAO_BANK"
        ]
      },
      "ProductPurchaseMaterialDto": {
        "type": "object",
        "required": [
          "purchaseId",
          "recentDeliveredRequests",
          "issuedCoupons",
          "orderSummary",
          "payableMethodIds",
          "tossPaymentsInterestFreePolicies"
        ],
        "properties": {
          "purchaseId": {
            "type": "string"
          },
          "recentDeliveredRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDeliveryAddressDto"
            }
          },
          "recommendedIssuedCouponId": {
            "type": "integer",
            "format": "int64"
          },
          "issuedCoupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssuedCouponWhenOrderDto"
            }
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          },
          "refundAccount": {
            "$ref": "#/components/schemas/RefundAccountDto"
          },
          "payableMethodIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tossPaymentsInterestFreePolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TossPaymentInterestFreePolicyDto"
            }
          }
        }
      },
      "StartIamportPaymentRequestDto": {
        "type": "object",
        "required": [
          "pg",
          "pgMethod"
        ],
        "properties": {
          "pg": {
            "type": "string",
            "description": "payment gateway id"
          },
          "pgMethod": {
            "type": "string",
            "description": "payment gateway dependent method"
          }
        }
      },
      "IamportPaymentMaterialDto": {
        "type": "object",
        "required": [
          "storeId",
          "pg",
          "merchantId",
          "productName",
          "productPrice",
          "currency",
          "language",
          "buyerTel",
          "payMethod"
        ],
        "properties": {
          "storeId": {
            "type": "string",
            "description": "store id (ex. 'imp*')"
          },
          "pg": {
            "type": "string",
            "description": "payment gateway id"
          },
          "merchantId": {
            "type": "string",
            "description": "generated merchantId for this payment"
          },
          "productName": {
            "type": "string",
            "description": "product name to show to user"
          },
          "productPrice": {
            "type": "integer",
            "format": "int64",
            "description": "payment price as KRW"
          },
          "currency": {
            "type": "string",
            "description": "KRW"
          },
          "language": {
            "type": "string",
            "description": "ko"
          },
          "buyerTel": {
            "type": "string",
            "description": "buyer phone number"
          },
          "payMethod": {
            "type": "string",
            "description": "pay method (ex. card )"
          },
          "naverProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NaverProductDto"
            }
          }
        }
      },
      "NaverProductDto": {
        "type": "object",
        "required": [
          "categoryType",
          "categoryId",
          "uid",
          "name",
          "count"
        ],
        "properties": {
          "categoryType": {
            "type": "string"
          },
          "categoryId": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StartConnectPayPaymentRequestDto": {
        "type": "object",
        "required": [
          "payMethod"
        ],
        "properties": {
          "payMethod": {
            "$ref": "#/components/schemas/ConnectPayPaymentMethodEnum"
          }
        }
      },
      "ConnectPayPaymentMethodEnum": {
        "type": "string",
        "enum": [
          "CARD",
          "ACCOUNT_TRANSFER"
        ]
      },
      "ConnectPayPaymentMaterialDto": {
        "type": "object",
        "required": [
          "clientKey",
          "customerKey",
          "amount",
          "merchantId",
          "title",
          "successUrl",
          "failUrl",
          "redirectUrl"
        ],
        "properties": {
          "clientKey": {
            "type": "string",
            "description": "커넥트페이 JS SDK 인증용 clientKey"
          },
          "customerKey": {
            "type": "string",
            "description": "결제 요청시 사용되는 user의 external uid"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "실제 결제되는 금액 (amount)"
          },
          "merchantId": {
            "type": "string",
            "description": "주문-결제건에 대한 고유 ID (OrderID)"
          },
          "title": {
            "type": "string",
            "description": "결제에 대한 주문명 (OrderName)"
          },
          "successUrl": {
            "type": "string",
            "description": "결제 성공 시 리다이렉트 URL"
          },
          "failUrl": {
            "type": "string",
            "description": "결제 실패 시 리다이렉트 URL"
          },
          "redirectUrl": {
            "type": "string",
            "description": "커넥트페이 OAuth 인증 시 사용될 redirect url"
          }
        }
      },
      "StartTossPaymentRequestDto": {
        "type": "object",
        "required": [
          "payMethod"
        ],
        "properties": {
          "payMethod": {
            "$ref": "#/components/schemas/TossPaymentMethodEnum"
          }
        }
      },
      "TossPaymentMethodEnum": {
        "type": "string",
        "enum": [
          "CARD",
          "VIRTUAL_ACCOUNT",
          "MOBILE",
          "KAKAO_PAY",
          "TOSS_PAY",
          "APPLE_PAY"
        ]
      },
      "TossPaymentMaterialDto": {
        "type": "object",
        "required": [
          "clientKey",
          "amount",
          "payMethod",
          "merchantId",
          "title",
          "successUrl",
          "failUrl",
          "customerMobilePhone"
        ],
        "properties": {
          "clientKey": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "payMethod": {
            "type": "string"
          },
          "merchantId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "successUrl": {
            "type": "string"
          },
          "failUrl": {
            "type": "string"
          },
          "virtualAccountCallbackUrl": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerMobilePhone": {
            "type": "string"
          }
        }
      },
      "DryRunPaymentMaterialDto": {
        "type": "object",
        "required": [
          "merchantId"
        ],
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "generated merchantId for this payment"
          }
        }
      },
      "FreePaymentMaterialDto": {
        "type": "object",
        "required": [
          "merchantId"
        ],
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "generated merchantId for this payment"
          }
        }
      },
      "OLCEstimationRequestDto": {
        "type": "object",
        "required": [
          "partials"
        ],
        "properties": {
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          }
        }
      },
      "PartialOrderItemDto": {
        "type": "object",
        "required": [
          "orderItemId",
          "quantity"
        ],
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderItemPurchaseStateEnum": {
        "type": "string",
        "enum": [
          "WAIT",
          "PAID",
          "REFUNDED"
        ]
      },
      "ProductSearchingOrderByEnum": {
        "type": "string",
        "enum": [
          "MATCHING_SCORE_DESC",
          "POPULARITY",
          "RATING_DESC",
          "FINAL_PRICE_DESC",
          "FINAL_PRICE_ASC",
          "DISCOUNT_PERCENTAGE_DESC",
          "REVIEW_COUNT_DESC",
          "REVIEW_RATING_AVG_DESC",
          "CREATED_AT_DESC"
        ]
      },
      "OrderHistoryListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderHistoryDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyOrderHistoryListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrderHistoryDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyOrderHistoryDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderHistoryDto"
          },
          {
            "type": "object",
            "properties": {
              "orderSummary": {
                "$ref": "#/components/schemas/MyOrderSummaryDto"
              }
            }
          }
        ]
      },
      "OrderHistoryDto": {
        "type": "object",
        "required": [
          "orderSummary",
          "deliveryRequest",
          "purchaseResult"
        ],
        "properties": {
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          },
          "deliveryRequest": {
            "$ref": "#/components/schemas/DeliveryRequestDto"
          },
          "purchaseResult": {
            "$ref": "#/components/schemas/PurchaseResultDto"
          }
        }
      },
      "MyOrderLineTicketListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyOrderLineTicketDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyOrderLineTicketDto": {
        "type": "object",
        "required": [
          "ticketType",
          "createdAtMillis"
        ],
        "properties": {
          "ticketType": {
            "$ref": "#/components/schemas/OrderLineTicketEnum"
          },
          "returnTicket": {
            "$ref": "#/components/schemas/OrderLineReturnTicketWithOrderDto"
          },
          "cancelTicket": {
            "$ref": "#/components/schemas/OrderLineCancelTicketWithOrderDto"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MyOLTicketsCountDto": {
        "type": "object",
        "required": [
          "cancelTicket",
          "returnTicket"
        ],
        "properties": {
          "cancelTicket": {
            "$ref": "#/components/schemas/OrderLineTicketCountDto"
          },
          "returnTicket": {
            "$ref": "#/components/schemas/OrderLineTicketCountDto"
          }
        }
      },
      "OrderLineTicketCountDto": {
        "type": "object",
        "required": [
          "inProgress",
          "resolved"
        ],
        "properties": {
          "inProgress": {
            "description": "진행 중 인 (반품 or 취소) 티켓 수",
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "description": "최근 4일 내 완료된 (반품 or 취소) 티켓 수",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeliveryRequestDto": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "request": {
            "type": "string"
          }
        }
      },
      "PurchaseResultDto": {
        "type": "object",
        "required": [
          "paymentId",
          "payemntVendor",
          "paymentMethod",
          "paidAmount",
          "refundedAmount",
          "purchaseState"
        ],
        "properties": {
          "paymentId": {
            "type": "string"
          },
          "paymentVendor": {
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodEnum"
          },
          "virtualAccount": {
            "$ref": "#/components/schemas/VirtualAccountDto"
          },
          "card": {
            "$ref": "#/components/schemas/CardDto"
          },
          "paidAmount": {
            "type": "integer",
            "format": "int64"
          },
          "refundedAmount": {
            "type": "integer",
            "format": "int64"
          },
          "purchaseState": {
            "$ref": "#/components/schemas/PurchaseStateEnum"
          },
          "completedAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VirtualAccountDto": {
        "type": "object",
        "required": [
          "accountNumber",
          "bank",
          "customerName"
        ],
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "bank": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "dueDateMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CardDto": {
        "type": "object",
        "required": [
          "companyName"
        ],
        "properties": {
          "companyName": {
            "description": "카드사 (e.g. 하나, 신한, BC카드)",
            "type": "string"
          },
          "installmentPlanMonths": {
            "description": "할부 개월 수 (0인 경우, 일시불)",
            "minimum": 0,
            "format": "int32",
            "type": "integer"
          },
          "interestFreeInstallment": {
            "description": "무이자 할부 여부",
            "type": "boolean"
          }
        }
      },
      "PaymentMethodEnum": {
        "type": "string",
        "enum": [
          "CARD",
          "ACCOUNT_TRANSFER",
          "KAKAO_PAY",
          "NAVER_PAY",
          "TOSS_PAY",
          "VIRTUAL_ACCOUNT",
          "DRY",
          "MOBILE",
          "FREE",
          "APPLE_PAY"
        ]
      },
      "RefundPaymentMethodEnum": {
        "type": "string",
        "enum": [
          "CARD",
          "ACCOUNT_TRANSFER",
          "KAKAO_PAY",
          "NAVER_PAY",
          "TOSS_PAY",
          "VIRTUAL_ACCOUNT",
          "DRY",
          "MOBILE",
          "FREE",
          "APPLE_PAY",
          "POINT"
        ]
      },
      "RefundPaymentVendorEnum": {
        "type": "string",
        "enum": [
          "IAMPORT",
          "TOSS_PAYMENTS",
          "DRY_RUN",
          "CONNECT_PAY",
          "FREE"
        ]
      },
      "PurchaseStateEnum": {
        "type": "string",
        "enum": [
          "WAIT",
          "WAITING_FOR_DEPOSIT",
          "COMPLETED",
          "ABORTED"
        ]
      },
      "MyOrderSummaryDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderSummaryDto"
          },
          {
            "type": "object",
            "required": [
              "itemGroups"
            ],
            "properties": {
              "itemGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MyOrderItemGroupDto"
                }
              }
            }
          }
        ]
      },
      "OrderSummaryDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          {
            "type": "object",
            "required": [
              "orderId",
              "itemGroups",
              "createdAtMillis"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "(deprecated) use orderId"
              },
              "orderId": {
                "type": "string"
              },
              "costElements": {
                "type": "array",
                "description": "- PriceSetDto 의 가격 상세를 표현하기 위한 필드\n- 점진적으로 확장해 나가나, 현재는 배송비에 대한 상세 정보만 표시한다.\n",
                "items": {
                  "$ref": "#/components/schemas/CostElementDto"
                }
              },
              "appliedCouponCode": {
                "type": "string",
                "description": "appliedCoupon.coupon.code 를 통해 접근하도록 합니다.",
                "deprecated": true
              },
              "appliedCoupon": {
                "$ref": "#/components/schemas/IssuedCouponDto"
              },
              "itemGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderItemGroupDto"
                }
              },
              "confirmedAtMillis": {
                "type": "integer",
                "format": "int64"
              },
              "createdAtMillis": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "PriceSetDeltaDto": {
        "type": "object",
        "required": [
          "totalProductPrice",
          "totalDeliveryPrice",
          "serviceCharge",
          "discountAmount",
          "finalPurchaseAmount"
        ],
        "properties": {
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "totalDeliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "serviceCharge": {
            "type": "integer",
            "format": "int64"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          },
          "costElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostElementDto"
            }
          }
        }
      },
      "DeliveryPriceDto": {
        "type": "object",
        "required": [
          "normal",
          "jeju",
          "backCountry"
        ],
        "properties": {
          "normal": {
            "type": "integer",
            "format": "int64"
          },
          "jeju": {
            "type": "integer",
            "format": "int64"
          },
          "backCountry": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PriceSetDto": {
        "type": "object",
        "required": [
          "totalProductPrice",
          "totalDeliveryPrice",
          "serviceCharge",
          "discountAmount",
          "finalPurchaseAmount"
        ],
        "properties": {
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "totalDeliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "serviceCharge": {
            "type": "integer",
            "format": "int64"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MyOrderItemGroupDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderItemGroupDto"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MyOrderItemDto"
                }
              }
            }
          }
        ]
      },
      "OrderItemGroupDto": {
        "type": "object",
        "required": [
          "groupId",
          "mall",
          "brand",
          "deliveryPrice",
          "items"
        ],
        "properties": {
          "groupId": {
            "type": "string"
          },
          "mall": {
            "$ref": "#/components/schemas/MallDto"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "costElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostElementDto"
            }
          },
          "deliveryPrice": {
            "type": "integer",
            "format": "int64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        }
      },
      "CostElementDto": {
        "type": "object",
        "required": [
          "type",
          "amount"
        ],
        "description": "- 가격의 상세 정보를 표현하는 DTO\n- 현재 배송비, 반품비에 대해서만 상세정보가 존재한다.\n",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CostTypeEnum"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CostTypeEnum": {
        "type": "string",
        "enum": [
          "SHIPPING_COST_NORMAL",
          "SHIPPING_COST_JEJU",
          "SHIPPING_COST_BACK_COUNTRY",
          "RETURN_COST_NORMAL",
          "RETURN_COST_JEJU",
          "RETURN_COST_BACK_COUNTRY",
          "RETURN_COST_TO_REFUND_FREE_SHIPPING"
        ]
      },
      "MyOrderItemDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderItemDto"
          },
          {
            "type": "object",
            "required": [
              "reviewCreatable"
            ],
            "properties": {
              "review": {
                "$ref": "#/components/schemas/ProductReviewDto"
              },
              "reviewCreationExpirationDays": {
                "type": "integer",
                "format": "int64"
              },
              "paidAtMillis": {
                "type": "integer",
                "format": "int64"
              },
              "reviewCreatable": {
                "type": "boolean"
              },
              "estimateShipmentAt": {
                "type": "string",
                "description": "주문 시점 기준 상품의 출고예정일(ISO DATE, uuuu-MM-dd)"
              }
            }
          }
        ]
      },
      "DividedOrderItemDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderItemDto"
          },
          {
            "type": "object",
            "required": [
              "dividedFromId"
            ],
            "properties": {
              "dividedFromId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "EachOLCEstimationDto": {
        "required": [
          "orderItemId",
          "quantity",
          "totalProductPrice",
          "totalDiscountAmount",
          "finalPurchaseAmount",
          "usePoint"
        ],
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiscountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EachOLREstimationDto": {
        "required": [
          "orderItemId",
          "quantity",
          "totalProductPrice",
          "totalDiscountAmount",
          "finalPurchaseAmount",
          "usePoint"
        ],
        "properties": {
          "orderItemId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "totalProductPrice": {
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "type": "integer",
            "format": "int64"
          },
          "totalDiscountAmount": {
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OrderItemDto": {
        "required": [
          "id",
          "product",
          "productItem",
          "singlePrice",
          "quantity",
          "singleDirectDiscountAmount",
          "totalPrice",
          "state",
          "purchaseState",
          "delivery",
          "totalProductPrice",
          "finalPurchaseAmount",
          "totalDiscountAmount",
          "totalDirectDiscountAmount",
          "brand",
          "receiptConfirmation",
          "finalSinglePrice",
          "freeReturnTarget"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "productItem": {
            "$ref": "#/components/schemas/ProductItemDto"
          },
          "singlePrice": {
            "description": "상품 가격 (퀸잇 즉시할인 반영 안됨)",
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int64"
          },
          "singleDirectDiscountAmount": {
            "description": "퀸잇 즉시 할인액",
            "type": "integer",
            "format": "int64"
          },
          "totalPrice": {
            "description": "(deprecated) Use `totalProductPrice` instead.",
            "type": "integer",
            "format": "int64"
          },
          "totalProductPrice": {
            "description": "총 상품가액 (`(singlePrice - singleDirectDiscountAmount) * quantity`)",
            "type": "integer",
            "format": "int64"
          },
          "finalPurchaseAmount": {
            "description": "실제 결제액 (`totalProductPrice - totalDiscountAmount - usePoint`)",
            "type": "integer",
            "format": "int64"
          },
          "usePoint": {
            "description": "사용포인트",
            "type": "integer",
            "format": "int64"
          },
          "totalDiscountAmount": {
            "description": "총 장바구니 쿠폰 할인액 (`singleDiscountAmount * quantity + residueDiscountAmount`)",
            "type": "integer",
            "format": "int64"
          },
          "totalDirectDiscountAmount": {
            "description": "총 퀸잇 즉시 할인액 (`singleDirectDiscountAmount * quantity`)",
            "type": "integer",
            "format": "int64"
          },
          "finalSinglePrice": {
            "description": "상품가액 (`singlePrice - singleDirectDiscountAmount`)",
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/OrderStateEnum"
          },
          "purchaseState": {
            "$ref": "#/components/schemas/OrderItemPurchaseStateEnum"
          },
          "delivery": {
            "$ref": "#/components/schemas/DeliveryProgressDto"
          },
          "primaryCancelTicket": {
            "$ref": "#/components/schemas/OLCTicketDto"
          },
          "primaryReturnTicket": {
            "$ref": "#/components/schemas/OLRTicketDto"
          },
          "brand": {
            "$ref": "#/components/schemas/BrandDto"
          },
          "receiptConfirmation": {
            "type": "boolean"
          },
          "receiptConfirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "freeReturnTarget": {
            "type": "boolean"
          }
        }
      },
      "DeliveryProgressDto": {
        "type": "object",
        "required": [
          "state"
        ],
        "properties": {
          "vendorName": {
            "type": "string"
          },
          "vendorDeliveryNumber": {
            "type": "string"
          },
          "detailUrl": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/DeliveryStateEnum"
          },
          "shippedAtMillis": {
            "description": "해당 주문이 출고된 시점입니다. 현재는 배송 중으로 변경된 시간을 의미합니다.",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeliveryStateEnum": {
        "type": "string",
        "enum": [
          "WAIT",
          "PREPARING",
          "IN_DELIVERY",
          "COMPLETED",
          "CANCELLED"
        ]
      },
      "OrderByEnum": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "ProductOrderByEnum": {
        "type": "string",
        "enum": [
          "RECOMMENDATION",
          "POPULARITY",
          "CREATED_AT_DESC",
          "FINAL_PRICE_DESC",
          "FINAL_PRICE_ASC",
          "DISCOUNT_PERCENTAGE_DESC",
          "REVIEW_COUNT_DESC",
          "REVIEW_RATING_AVG_DESC"
        ]
      },
      "OrderStateEnum": {
        "type": "string",
        "enum": [
          "WAIT",
          "PURCHASED",
          "REFUNDED",
          "PREPARING_PRODUCTS",
          "IN_DELIVERY",
          "DELIVERY_COMPLETED",
          "ABORTED"
        ]
      },
      "OrderLineTicketStateEnum": {
        "type": "string",
        "description": "취소(반품) 요청 상태\n- SUBMITTED: 취소(반품)가 요청됨\n- CONFIRMED: 취소(반품) 요청을 승인함 (처리 진행 중)\n- RESOLVED: 취소(반품) 요청이 종결됨 (고객에게 금액 환불됨)\n- WITHDRAWN: 취소(반품) 요청을 고객이 철회함\n- REJECTED: 취소(반품) 요청을 셀러/어드민이 반려함\n",
        "enum": [
          "SUBMITTED",
          "CONFIRMED",
          "RESOLVED",
          "WITHDRAWN",
          "REJECTED"
        ]
      },
      "OrderLineReturnStateEnum": {
        "type": "string",
        "description": "반품 요청 상태\n- WAITING : 고객이 반품 요청하고 셀러/어드민의 승인 대기를 기다리는 상태\n- IN_RECALL_DELIVERY_READY : (굿스플로 연동인 경우에만) 승인 후, 회수 준비\n- IN_RECALL_DELIVERY_PROCESSING : (굿스플로 연동인 경우) 배송기사 픽업 후 인계받은 후, 반품지 주소로 회수 중. (굿스플로 연동 아닌 경우에는 셀러에 의한 회수중)\n- RECALL_DELIVERY_COMPLETED : (굿스플로 연동인 경우에만) 회수 건 배달완료(검수 중)\n- REJECTED : 반품 요청 종결(셀러/어드민이 반품 요청 반려)\n- RESOLVED : 반품 요청이 종결(고객에게 금액 환불)\n- WITHDRAWN : 반품 요청 후 고객이 철회\n",
        "enum": [
          "WAITING",
          "IN_RECALL_DELIVERY_READY",
          "IN_RECALL_DELIVERY_PROCESSING",
          "RECALL_DELIVERY_COMPLETED",
          "REJECTED",
          "RESOLVED",
          "WITHDRAWN"
        ]
      },
      "OrderLineTicketEnum": {
        "description": "- 주문서 티켓 타입\n- CANCEL : 취소\n- RETURN : 반품\n",
        "type": "string",
        "enum": [
          "CANCEL",
          "RETURN"
        ]
      },
      "AuditorGroupEnum": {
        "type": "string",
        "description": "티켓 상태를 변경한 주체자 단위\n- SYSTEM: 시스템에 의해 자동으로 상태가 변경됨\n- CX_ADMIN: CX팀에 의해 상태가 변경됨\n- SELLER_ADMIN: 셀러에 의해 상태가 변경됨\n- USER: 고객에 의해 상태가 변경됨\n",
        "enum": [
          "SYSTEM",
          "CX_ADMIN",
          "SELLER_ADMIN",
          "USER"
        ]
      },
      "OLCEstimationDto": {
        "type": "object",
        "required": [
          "priceDelta"
        ],
        "properties": {
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "priceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          }
        }
      },
      "OLCEstimationResultDto": {
        "type": "object",
        "required": [
          "priceDelta",
          "eachEstimations"
        ],
        "properties": {
          "eachEstimations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EachOLCEstimationDto"
            }
          },
          "priceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          }
        }
      },
      "OLCRequestDto": {
        "type": "object",
        "required": [
          "partials",
          "reason"
        ],
        "properties": {
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "OLCTicketDto": {
        "type": "object",
        "required": [
          "ticketId",
          "state",
          "reason",
          "createdAtMillis",
          "orderItems"
        ],
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/OrderLineTicketStateEnum"
          },
          "auditorGroup": {
            "$ref": "#/components/schemas/AuditorGroupEnum"
          },
          "reason": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "withdrawnAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectReason": {
            "type": "string"
          },
          "resolvedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPriceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        }
      },
      "OrderLineCancelTicketWithOrderDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OLCTicketDto"
          },
          {
            "type": "object",
            "required": [
              "linkedOrder"
            ],
            "properties": {
              "linkedOrder": {
                "$ref": "#/components/schemas/OrderHistoryDto"
              }
            }
          }
        ]
      },
      "OLREstimateRequestDto": {
        "type": "object",
        "required": [
          "isCustomerNegligence",
          "partials"
        ],
        "properties": {
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          }
        }
      },
      "OLREstimationResultDto": {
        "type": "object",
        "required": [
          "priceDelta",
          "eachEstimations"
        ],
        "properties": {
          "eachEstimations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EachOLREstimationDto"
            }
          },
          "priceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          }
        }
      },
      "OLRRequestDto": {
        "type": "object",
        "required": [
          "partials",
          "isCustomerNegligence",
          "returnAddress",
          "reason"
        ],
        "properties": {
          "partials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialOrderItemDto"
            }
          },
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "returnAddress": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "reason": {
            "type": "string"
          },
          "imageUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OLRTicketDto": {
        "type": "object",
        "required": [
          "ticketId",
          "state",
          "returnState",
          "isCustomerNegligence",
          "returnAddress",
          "reason",
          "createdAtMillis",
          "orderItems"
        ],
        "properties": {
          "ticketId": {
            "type": "string"
          },
          "isCustomerNegligence": {
            "type": "boolean"
          },
          "returnAddress": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "state": {
            "$ref": "#/components/schemas/OrderLineTicketStateEnum"
          },
          "returnState": {
            "$ref": "#/components/schemas/OrderLineReturnStateEnum"
          },
          "auditorGroup": {
            "$ref": "#/components/schemas/AuditorGroupEnum"
          },
          "reason": {
            "type": "string"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "withdrawnAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "rejectReason": {
            "type": "string"
          },
          "resolvedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resolvedPriceDelta": {
            "$ref": "#/components/schemas/PriceSetDeltaDto"
          },
          "refundPaymentInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundPaymentInfoDto"
            }
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "imageUrls": {
            "type": "array",
            "description": "original image urls",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          },
          "recallDeliveryProgress": {
            "$ref": "#/components/schemas/OLRTRecallDeliveryProgressDto"
          }
        }
      },
      "OLRTRecallDeliveryProgressDto": {
        "type": "object",
        "description": "null 일경우 GoodsFlow 회수 연동중인 상품이 아님",
        "properties": {
          "recallDeliveryVendor": {
            "$ref": "#/components/schemas/DeliveryVendorEnum"
          },
          "recallDeliveryVendorNumber": {
            "description": "송장 번호",
            "type": "string"
          },
          "requestable": {
            "description": "재회수 요청 가능 여부",
            "type": "boolean"
          },
          "recallState": {
            "$ref": "#/components/schemas/RecallDeliveryStateEnum"
          },
          "recallDeliveryCompletedAtMillis": {
            "description": "회수 완료일",
            "type": "integer",
            "format": "int64"
          },
          "recallDeliveryTraceUrl": {
            "description": "회수 트래킹 URL",
            "type": "string"
          }
        }
      },
      "OrderLineReturnTicketWithOrderDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OLRTicketDto"
          },
          {
            "type": "object",
            "required": [
              "linkedOrder"
            ],
            "properties": {
              "linkedOrder": {
                "$ref": "#/components/schemas/OrderHistoryDto"
              }
            }
          }
        ]
      },
      "RefundPaymentInfoDto": {
        "type": "object",
        "description": "환불 결제 수단",
        "required": [
          "paymentMethod"
        ],
        "properties": {
          "paymentMethod": {
            "$ref": "#/components/schemas/RefundPaymentMethodEnum"
          },
          "paymentVendor": {
            "$ref": "#/components/schemas/RefundPaymentVendorEnum"
          },
          "detail": {
            "description": "환불 결제 수단별 상세 설명(카드결제의 경우 카드사 정보)",
            "type": "string"
          }
        }
      },
      "DeliveryVendorEnum": {
        "description": "- (주문/송장 정보 관련) 설정 가능한 택배사\n- `ETC (기타배송사)` -> 특정 배송사를 이용중이지만, 현재 지원하고 있지 않은 택배사 (기타배송사에 대한 지원이 필요한 경우, 별도 문의주세요)\n- `SELF_MANAGED (직접배송)` -> 직접 배송하는 경우에 사용\n\n## 코드별 연결되는 배송사\n\n- CJ_GLS  # CJ대한통운\n- LOGEN  # 로젠택배\n- EPOST  # 우체국택배\n- HANJIN  # 한진택배\n- LOTTE  # 롯데택배\n- DAESIN  # 대신택배\n- ILYANG  # 일양택배\n- KYUNGDONG  # 경동택배\n- HAPDONG  # 합동택배\n- CHUNIL  # 천일택배\n- CVSNET  # GS편의점택배\n- HPL  # 한의사랑택배\n- KUNYOUNG  # 건영택배\n- HONAM  # 호남택배\n- SLX  # SLX\n- BGF  # CU편의점택배\n- YONGMA  # 용마로지스\n- SEBANG  # 세방택배\n- WONDERS  # 원더스퀵\n- NH_LOGIS  # 농협택배\n- HI_LOGIS  # HI택배\n- HOMEPICK  # 홈픽택배\n- KOREX_G  # CJ대한통운국제특송\n- EMS  # EMS\n- LOTTE_GLOBAL  # 롯데글로벌\n- HANDEX  # 한덱스\n- DHL  # DHL\n- FEDEX  # FEDEX\n- UPS  # UPS\n- TNT  # TNT\n- PANTOS  # 범한판토스\n- ACI_EXPRESS  # ACI Express\n- ACE_EXP  # ACE Express\n- EUNHA  # 은하쉬핑\n- CHAIN_LOGISTICS  # 두발히어로\n- LOGISPOT  # 로지스팟\n- VROONG  # 부릉(VROONG)\n- ETOMARS  # 이투마스\n- VENDORPIA  # 에이스물류\n- DAERIM  # 대림통운\n- VALEX  # 발렉스\n- ETC  # 기타배송사\n- SELF_MANAGED  # 직접배송\n",
        "type": "string",
        "enum": [
          "CJ_GLS",
          "LOGEN",
          "EPOST",
          "HANJIN",
          "LOTTE",
          "DAESIN",
          "ILYANG",
          "KYUNGDONG",
          "HAPDONG",
          "CHUNIL",
          "CVSNET",
          "HPL",
          "KUNYOUNG",
          "HONAM",
          "SLX",
          "BGF",
          "YONGMA",
          "SEBANG",
          "WONDERS",
          "NH_LOGIS",
          "HI_LOGIS",
          "HOMEPICK",
          "KOREX_G",
          "EMS",
          "LOTTE_GLOBAL",
          "HANDEX",
          "DHL",
          "FEDEX",
          "UPS",
          "TNT",
          "PANTOS",
          "ACI_EXPRESS",
          "ACE_EXP",
          "EUNHA",
          "CHAIN_LOGISTICS",
          "LOGISPOT",
          "VROONG",
          "ETOMARS",
          "VENDORPIA",
          "DAERIM",
          "VALEX",
          "ETC",
          "SELF_MANAGED"
        ]
      },
      "RecallDeliveryStateEnum": {
        "type": "string",
        "enum": [
          "WAIT",
          "PREPARING",
          "IN_DELIVERY",
          "COMPLETED",
          "CANCELED",
          "FAILED"
        ]
      },
      "BannerDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/BannerDataDto"
          },
          {
            "type": "object",
            "required": [
              "id",
              "multiResolutionImage"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "multiResolutionImage": {
                "$ref": "#/components/schemas/MultiResolutionImageDto"
              },
              "displayProducts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BannerDisplayProductDto"
                }
              }
            }
          }
        ]
      },
      "BannerDisplayProductDto": {
        "type": "object",
        "required": [
          "productId",
          "imageUrl",
          "finalPrice",
          "title",
          "brandName",
          "discountPercentage"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "finalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "description": "상품 이름",
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "discountPercentage": {
            "description": "originalPrice 대비 finalPrice 대비 상품 할인률",
            "type": "integer",
            "format": "int32"
          },
          "maximumBenefitCouponAppliedFinalPrice": {
            "type": "integer",
            "format": "int64"
          },
          "originalToMaximumBenefitCouponPricePercentage": {
            "description": "originalPrice 대비 maximumBenefitCouponAppliedFinalPrice 대비 상품 할인률",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BannerDataDto": {
        "type": "object",
        "required": [
          "type",
          "imageUrl",
          "linkUrl",
          "title",
          "enabled",
          "note"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BannerTypeEnum"
          },
          "categoryId": {
            "type": "string"
          },
          "brandId": {
            "type": "string"
          },
          "brandSourcingTagId": {
            "type": "string"
          },
          "displayProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayProductCount": {
            "type": "integer"
          },
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "endAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "enabled": {
            "description": "(deprecated) enabled",
            "type": "boolean"
          },
          "note": {
            "description": "(deprecated) note",
            "type": "string"
          }
        }
      },
      "BannerTypeEnum": {
        "type": "string",
        "description": "SECTIONX is deprecated",
        "enum": [
          "MAIN",
          "STYLE",
          "SUB",
          "DISCOUNT",
          "CATEGORY",
          "BRAND",
          "SECTION1",
          "SECTION2",
          "SPARE",
          "BEST_TOP",
          "DEPARTMENT_STORE",
          "OUTLET",
          "HOME_SHOPPING",
          "SOHO_MALL",
          "QUEENIT_EXCLUSIVE",
          "DESIGNER",
          "MAGAZINE",
          "EVENT",
          "BRAND_PROMOTION",
          "SEARCH_HOME",
          "MAIN_V2"
        ]
      },
      "CollectionListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "CollectionDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "elements"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionElementDto"
            }
          }
        }
      },
      "CollectionElementDto": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CollectionElementTypeEnum"
          },
          "text": {
            "$ref": "#/components/schemas/TextCollectionElementDto"
          },
          "image": {
            "$ref": "#/components/schemas/ImageCollectionElementDto"
          },
          "products": {
            "$ref": "#/components/schemas/ProductsCollectionElementDto"
          },
          "videos": {
            "$ref": "#/components/schemas/VideosCollectionElementDto"
          },
          "link": {
            "$ref": "#/components/schemas/LinkCollectionElementDto"
          },
          "campaign": {
            "$ref": "#/components/schemas/CampaignCollectionElementDto"
          },
          "coupon": {
            "$ref": "#/components/schemas/CouponCollectionElementDto"
          },
          "imageLink": {
            "$ref": "#/components/schemas/ImageLinkCollectionElementDto"
          },
          "markdown": {
            "$ref": "#/components/schemas/MarkdownCollectionElementDto"
          },
          "pointPromotion": {
            "$ref": "#/components/schemas/PointPromotionCollectionElementDto"
          },
          "attendanceCheck": {
            "$ref": "#/components/schemas/AttendanceCheckCollectionElementDto"
          }
        }
      },
      "TextCollectionElementDto": {
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CollectionTextTypeEnum"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "CollectionTextTypeEnum": {
        "type": "string",
        "enum": [
          "TITLE",
          "SUBTITLE",
          "BODY",
          "DESCRIPTION"
        ]
      },
      "ImageCollectionElementDto": {
        "required": [
          "imageUrl"
        ],
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "ImageLinkCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "linkUrl"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ImageLinkTypeEnum"
          },
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "ProductsCollectionElementDto": {
        "type": "object",
        "required": [
          "columnCount",
          "products",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "columnCount": {
            "type": "integer",
            "format": "int32"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FreeReturnTargetFilterTypeEnum": {
        "type": "string",
        "enum": [
          "WHITELIST",
          "BLACKLIST"
        ]
      },
      "FreeReturnTargetTypeEnum": {
        "type": "string",
        "enum": [
          "PRODUCT"
        ]
      },
      "FreeReturnPromotionTargetTypeEnum": {
        "type": "string",
        "enum": [
          "PRODUCT",
          "BRAND_SOURCING"
        ]
      },
      "VideosCollectionElementDto": {
        "type": "object",
        "required": [
          "ids",
          "isLandscape"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isLandscape": {
            "type": "boolean"
          }
        }
      },
      "OrientationTypeEnum": {
        "type": "string",
        "enum": [
          "PORTRAIT",
          "LANDSCAPE"
        ]
      },
      "LinkCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "linkUrl"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "linkUrl": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "CampaignCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "campaign"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "CouponCollectionElementDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "couponCode"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "couponCode": {
            "type": "string"
          },
          "campaign": {
            "type": "string"
          }
        }
      },
      "MarkdownCollectionElementDto": {
        "type": "object",
        "required": [
          "markdown"
        ],
        "properties": {
          "markdown": {
            "type": "string"
          }
        }
      },
      "PointPromotionCollectionElementDto": {
        "type": "object",
        "required": [
          "promotionCode",
          "imageUrl"
        ],
        "properties": {
          "promotionCode": {
            "description": "적립금 프로모션 Code",
            "type": "string"
          },
          "amount": {
            "description": "프로모션 참석으로 받을 적립금 수량",
            "type": "integer",
            "format": "int64"
          },
          "imageUrl": {
            "description": "적립금 이미지 URL",
            "type": "string"
          },
          "campaign": {
            "description": "노트 용도의 필드",
            "type": "string"
          }
        }
      },
      "AttendanceCheckCollectionElementDto": {
        "type": "object",
        "required": [
          "title",
          "imageUrl",
          "kstStartDate",
          "kstEndDate",
          "numberOfAttendance",
          "attendanceRewardPolicies"
        ],
        "properties": {
          "id": {
            "description": "출석 체크 id",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "imageUrl": {
            "description": "출석 체크 이미지 URL",
            "type": "string"
          },
          "kstStartDate": {
            "type": "string",
            "description": "yyyy-mm-dd 형식의 일자"
          },
          "kstEndDate": {
            "type": "string",
            "description": "yyyy-mm-dd 형식의 일자"
          },
          "numberOfAttendance": {
            "type": "integer",
            "format": "int64"
          },
          "attendanceRewardPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceRewardPolicyCollectionElementDto"
            }
          }
        }
      },
      "AttendanceRewardPolicyCollectionElementDto": {
        "type": "object",
        "required": [
          "type",
          "pointAmount",
          "pointExpireDays"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AttendanceRewardPolicyTypeEnum"
          },
          "pointAmount": {
            "type": "integer",
            "format": "int64"
          },
          "pointExpireDays": {
            "type": "integer"
          }
        }
      },
      "AttendanceRewardPolicyTypeEnum": {
        "type": "string",
        "enum": [
          "DAILY_REWARD",
          "ACHIEVEMENT_REWARD"
        ]
      },
      "ImageLinkTypeEnum": {
        "type": "string",
        "enum": [
          "COUPON",
          "LINK"
        ]
      },
      "CollectionElementTypeEnum": {
        "type": "string",
        "enum": [
          "TEXT",
          "IMAGE",
          "PRODUCTS",
          "VIDEOS",
          "LINK",
          "CAMPAIGN",
          "COUPON",
          "IMAGELINK",
          "MARKDOWN",
          "POINT_PROMOTION",
          "ATTENDANCE_CHECK"
        ]
      },
      "UploadProductPageRequest": {
        "type": "object",
        "required": [
          "base64"
        ],
        "properties": {
          "base64": {
            "type": "string"
          }
        }
      },
      "CouponBookDto": {
        "type": "object",
        "required": [
          "code",
          "header",
          "title",
          "contents",
          "pairContents",
          "asset",
          "coupons"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "header": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "contents": {
            "type": "string"
          },
          "pairContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentsPairDto"
            }
          },
          "asset": {
            "$ref": "#/components/schemas/CouponBookAssetDto"
          },
          "coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCouponDto"
            }
          }
        }
      },
      "CouponBookAssetDto": {
        "type": "object",
        "required": [
          "primaryColor"
        ],
        "properties": {
          "primaryColor": {
            "$ref": "#/components/schemas/ColorGradientDto"
          },
          "contentImageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionContentImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          },
          "stickerImageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionStickerImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "ContentsPairDto": {
        "type": "object",
        "required": [
          "first",
          "second"
        ],
        "properties": {
          "first": {
            "type": "string"
          },
          "second": {
            "type": "string"
          }
        }
      },
      "ColorGradientDto": {
        "type": "object",
        "required": [
          "startColorCode",
          "endColorCode"
        ],
        "properties": {
          "startColorCode": {
            "type": "string",
            "description": "start of gradient color code. (ex. \\#AABBCC)"
          },
          "endColorCode": {
            "type": "string",
            "description": "end of gradient color code. (ex. \\#DDEEFF)"
          }
        }
      },
      "IssuedCouponWhenOrderDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IssuedCouponDto"
          },
          {
            "type": "object",
            "required": [
              "discountableAmount",
              "consumable"
            ],
            "properties": {
              "discountableAmount": {
                "type": "integer",
                "format": "int64"
              },
              "consumable": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "IssuedCouponDto": {
        "type": "object",
        "required": [
          "issuedCouponId",
          "coupon",
          "state",
          "issuedAtMillis",
          "activatingAtMillis"
        ],
        "properties": {
          "issuedCouponId": {
            "type": "integer",
            "format": "int64"
          },
          "coupon": {
            "$ref": "#/components/schemas/CouponDto"
          },
          "state": {
            "$ref": "#/components/schemas/IssuedCouponStateEnum"
          },
          "issuedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "activatingAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "expiringAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "linkUrl": {
            "type": "string"
          }
        }
      },
      "IssuedCouponStateEnum": {
        "type": "string",
        "enum": [
          "CONSUMED",
          "EXPIRED",
          "ACTIVATED",
          "DISABLED"
        ]
      },
      "CouponDto": {
        "type": "object",
        "required": [
          "code",
          "title",
          "caution",
          "conditionSummary",
          "type"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "manager": {
            "type": "string"
          },
          "caution": {
            "type": "string"
          },
          "conditionSummary": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CouponTypeEnum"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_AMOUNT type."
          },
          "discountPercentage": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "maxDiscountAmount": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.DISCOUNT_BY_PERCENTAGE type."
          },
          "specialPrice": {
            "type": "integer",
            "format": "int64",
            "description": "field for CouponTypeEnum.SPECIAL_PRICE type."
          }
        }
      },
      "AppCouponDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponDto"
          },
          {
            "type": "object",
            "properties": {
              "consumableCount": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "CouponDetailDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponDto"
          },
          {
            "type": "object",
            "required": [
              "expirationPolicy"
            ],
            "properties": {
              "expirationPolicy": {
                "$ref": "#/components/schemas/CouponExpirationPolicyDto"
              }
            }
          }
        ]
      },
      "CouponExpirationPolicyDto": {
        "type": "object",
        "properties": {
          "durationSecondsSinceHold": {
            "type": "integer",
            "format": "int64"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "endAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AppCouponListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppCouponDto"
            }
          },
          "maximumDiscountCouponAppliedPrice": {
            "description": "- 최대 쿠폰 할인가가 적용된 가격\n- 이 필드의 값이 `null`인 경우 -> 최대 할인가를 계산하기 위한 조건을 만족하는 쿠폰이 없는 것으로 볼 수 있음\n",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CouponTypeEnum": {
        "type": "string",
        "enum": [
          "DISCOUNT_BY_AMOUNT",
          "DISCOUNT_BY_PERCENTAGE",
          "SPECIAL_PRICE"
        ]
      },
      "ApplyCouponRequestDto": {
        "type": "object",
        "required": [
          "issuedCouponId"
        ],
        "properties": {
          "issuedCouponId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApplyPointRequestDto": {
        "type": "object",
        "required": [
          "usePoint"
        ],
        "properties": {
          "usePoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ReleaseCouponResponseDto": {
        "type": "object",
        "required": [
          "priceSet",
          "orderSummary"
        ],
        "properties": {
          "priceSet": {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          }
        }
      },
      "ApplyCouponResponseDto": {
        "type": "object",
        "required": [
          "priceSet",
          "orderSummary"
        ],
        "properties": {
          "priceSet": {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          }
        }
      },
      "ApplyPointResponseDto": {
        "type": "object",
        "required": [
          "priceSet",
          "orderSummary"
        ],
        "properties": {
          "priceSet": {
            "$ref": "#/components/schemas/PriceSetDto"
          },
          "orderSummary": {
            "$ref": "#/components/schemas/OrderSummaryDto"
          }
        }
      },
      "ProductPriceDto": {
        "type": "object",
        "required": [
          "originalPrice",
          "sellingPrice"
        ],
        "properties": {
          "originalPrice": {
            "type": "integer",
            "format": "int64",
            "description": "정가"
          },
          "sellingPrice": {
            "type": "integer",
            "format": "int64",
            "description": "판매가"
          }
        }
      },
      "ProductDiscountBenefitsDto": {
        "type": "object",
        "required": [
          "discountBenefitsByCoupon",
          "discountBenefitsByPoint"
        ],
        "properties": {
          "discountBenefitsByCoupon": {
            "$ref": "#/components/schemas/ProductDiscountBenefitsInfoByCouponDto"
          },
          "discountBenefitsByPoint": {
            "type": "integer",
            "format": "int64",
            "description": "사용가능한 포인트 금액"
          }
        }
      },
      "ProductDiscountBenefitsInfoByCouponDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDiscountBenefitsInfoByCouponElementDto"
            }
          }
        }
      },
      "ProductDiscountBenefitsInfoByCouponElementDto": {
        "type": "object",
        "required": [
          "title",
          "couponCode",
          "discountAmount"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "couponCode": {
            "type": "string"
          },
          "discountAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CheckFirstKakaoLoginCouponIssuableResponseDto": {
        "type": "object",
        "required": [
          "isIssuable"
        ],
        "properties": {
          "isIssuable": {
            "type": "boolean"
          }
        }
      },
      "AgeGroupFilterListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeGroupFilterDto"
            }
          }
        }
      },
      "AgeGroupFilterDto": {
        "type": "object",
        "required": [
          "code",
          "alias"
        ],
        "properties": {
          "code": {
            "$ref": "#/components/schemas/AgeGroupCodeEnum"
          },
          "alias": {
            "type": "string"
          }
        }
      },
      "CreatableReviewPromptDto": {
        "type": "object",
        "properties": {
          "myOrderItem": {
            "$ref": "#/components/schemas/MyOrderItemDto"
          }
        }
      },
      "DisplayProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "DisplayProductReviewListDtoV2": {
        "type": "object",
        "required": [
          "list",
          "totalPageCount",
          "totalElementCount"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayProductReviewDto"
            }
          },
          "totalPageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalElementCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RepresentativeProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "DisplayProductReviewDto": {
        "type": "object",
        "required": [
          "productReview",
          "optionTitle",
          "userProfileDisplayPolicy",
          "favoriteData"
        ],
        "properties": {
          "productReview": {
            "$ref": "#/components/schemas/ProductReviewDto"
          },
          "optionTitle": {
            "type": "string"
          },
          "userProfileDisplayPolicy": {
            "$ref": "#/components/schemas/UserProfileDisplayPolicyDto"
          },
          "favoriteData": {
            "$ref": "#/components/schemas/ProductReviewFavoriteDataDto"
          }
        }
      },
      "ProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "ProductReviewDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductReviewDataDto"
          },
          {
            "type": "object",
            "required": [
              "id",
              "uid",
              "createdAtMillis"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "uid": {
                "type": "string"
              },
              "createdAtMillis": {
                "type": "integer",
                "format": "int64"
              },
              "userProfile": {
                "$ref": "#/components/schemas/UserProfileDto"
              }
            }
          }
        ]
      },
      "ProductReviewFavoriteDataDto": {
        "type": "object",
        "required": [
          "favoriteCount",
          "isMyFavorite"
        ],
        "properties": {
          "favoriteCount": {
            "type": "integer",
            "format": "int64"
          },
          "isMyFavorite": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "UpdateProductReviewRequestDto": {
        "type": "object",
        "required": [
          "reviewData"
        ],
        "properties": {
          "reviewData": {
            "$ref": "#/components/schemas/ProductReviewDataDto"
          }
        }
      },
      "ProductCategoryReviewAttributeDto": {
        "type": "object",
        "required": [
          "productCategoryReviewGroupId",
          "label",
          "list",
          "guide"
        ],
        "properties": {
          "productCategoryReviewGroupId": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReviewAttributeItemDto"
            }
          },
          "guide": {
            "$ref": "#/components/schemas/ProductCategoryReviewGuideDto"
          }
        }
      },
      "ProductReviewAttributeDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewAttributeItemDto"
            }
          }
        }
      },
      "ProductCategoryReviewAttributeItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "options"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewAttributeOptionItemDto"
            }
          }
        }
      },
      "ProductReviewAttributeItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "selectedOptions"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewAttributeOptionItemDto"
            }
          }
        }
      },
      "ProductReviewAttributeOptionItemDto": {
        "type": "object",
        "required": [
          "code",
          "label"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "ProductCategoryReviewGuideDto": {
        "type": "object",
        "required": [
          "textGuides",
          "imageWithTitles"
        ],
        "properties": {
          "textGuides": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageWithTitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReviewGuideImageWithTitleDto"
            }
          }
        }
      },
      "ProductCategoryReviewGuideImageWithTitleDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "title"
        ],
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ProductReviewDataDto": {
        "type": "object",
        "required": [
          "rating"
        ],
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductReviewAttributeDto"
          },
          "rating": {
            "$ref": "#/components/schemas/ProductRatingEnum"
          },
          "size": {
            "$ref": "#/components/schemas/ProductSizeEnum"
          },
          "brightness": {
            "$ref": "#/components/schemas/ProductBrightnessEnum"
          },
          "colorSense": {
            "$ref": "#/components/schemas/ProductColorSenseEnum"
          },
          "thickness": {
            "$ref": "#/components/schemas/ProductThicknessEnum"
          },
          "contents": {
            "type": "string"
          },
          "imageUrls": {
            "description": "DEPRECATED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "multiResolutionImages": {
            "$ref": "#/components/schemas/MultiResolutionImageListDto"
          }
        }
      },
      "UserProfileDisplayPolicyDto": {
        "type": "object",
        "required": [
          "displayItemsOfUserProfile"
        ],
        "properties": {
          "displayItemsOfUserProfile": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserProfileItemEnum"
            }
          }
        }
      },
      "UserProfileItemEnum": {
        "type": "string",
        "enum": [
          "HEIGHT_AS_CENTI_METER",
          "WEIGHT_AS_KILO_GRAM",
          "TOP_SIZE",
          "BOTTOM_SIZE_AS_INCH",
          "SHOE_SIZE_AS_MILLI_METER",
          "AGE"
        ]
      },
      "ProductReviewCandidateListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewCandidateDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "ProductReviewCandidateDto": {
        "type": "object",
        "required": [
          "myOrderItem"
        ],
        "properties": {
          "myOrderItem": {
            "$ref": "#/components/schemas/MyOrderItemDto"
          }
        }
      },
      "MyProductReviewListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyProductReviewDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "MyProductReviewDto": {
        "type": "object",
        "required": [
          "myOrderItem"
        ],
        "properties": {
          "myOrderItem": {
            "$ref": "#/components/schemas/MyOrderItemDto"
          }
        }
      },
      "ProductReviewItemListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProductReviewStatisticsAttributeDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewStatisticsAttributeItemDto"
            }
          }
        }
      },
      "ProductReviewStatisticsAttributeItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "options"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReviewStatisticsAttributeOptionItemDto"
            }
          }
        }
      },
      "ProductReviewStatisticsAttributeOptionItemDto": {
        "type": "object",
        "required": [
          "code",
          "label",
          "count"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductReviewStatisticsSummaryDto": {
        "type": "object",
        "required": [
          "ratingAverage",
          "reviewCounts"
        ],
        "properties": {
          "ratingAverage": {
            "type": "number",
            "format": "double"
          },
          "reviewCounts": {
            "type": "integer",
            "format": "int64"
          },
          "attributes": {
            "$ref": "#/components/schemas/ProductReviewStatisticsAttributeDto"
          },
          "satisfactionPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "topPercentageOfSize": {
            "$ref": "#/components/schemas/ProductSizePercentageDto"
          },
          "topPercentageOfBrightness": {
            "$ref": "#/components/schemas/ProductBrightnessPercentageDto"
          },
          "topPercentageOfColorSense": {
            "$ref": "#/components/schemas/ProductColorSensePercentageDto"
          },
          "topPercentageOfThickness": {
            "$ref": "#/components/schemas/ProductThicknessPercentageDto"
          }
        }
      },
      "ProductRatingStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRatingPercentageDto"
            }
          }
        }
      },
      "ProductRatingPercentageDto": {
        "type": "object",
        "required": [
          "rating",
          "percentage"
        ],
        "properties": {
          "rating": {
            "$ref": "#/components/schemas/ProductRatingEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductReviewSortOrderEnum": {
        "type": "string",
        "enum": [
          "CREATED_AT_DESC",
          "CREATED_AT_ASC",
          "REPORT_COUNT_DESC",
          "RECOMMENDATION",
          "REVIEW_RATING_DESC",
          "REVIEW_RATING_ASC"
        ]
      },
      "ProductRatingEnum": {
        "type": "number",
        "x-enum-varnames": [
          "BAD",
          "NOT_BAD",
          "NORMAL",
          "GOOD",
          "BEST"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "ProductSizeStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizePercentageDto"
            }
          }
        }
      },
      "ProductSizePercentageDto": {
        "type": "object",
        "required": [
          "size"
        ],
        "properties": {
          "size": {
            "$ref": "#/components/schemas/ProductSizeEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductSizeEnum": {
        "type": "string",
        "enum": [
          "SMALL",
          "FITTED",
          "BIG"
        ]
      },
      "ProductBrightnessStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBrightnessPercentageDto"
            }
          }
        }
      },
      "ProductBrightnessPercentageDto": {
        "type": "object",
        "required": [
          "brightness"
        ],
        "properties": {
          "brightness": {
            "$ref": "#/components/schemas/ProductBrightnessEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductBrightnessEnum": {
        "type": "string",
        "enum": [
          "DARK",
          "SAME_AS_PHOTO",
          "BRIGHT"
        ]
      },
      "ProductColorSenseStatisticsDto": {
        "type": "object",
        "required": [
          "percentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductColorSensePercentageDto"
            }
          }
        }
      },
      "ProductColorSensePercentageDto": {
        "type": "object",
        "required": [
          "colorSense"
        ],
        "properties": {
          "colorSense": {
            "$ref": "#/components/schemas/ProductColorSenseEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductColorSenseEnum": {
        "type": "string",
        "enum": [
          "BLURRY",
          "SAME_AS_PHOTO",
          "VIVID"
        ]
      },
      "ProductThicknessStatisticsDto": {
        "type": "object",
        "required": [
          "precentages"
        ],
        "properties": {
          "percentages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductThicknessPercentageDto"
            }
          }
        }
      },
      "ProductThicknessPercentageDto": {
        "type": "object",
        "required": [
          "thickness"
        ],
        "properties": {
          "thickness": {
            "$ref": "#/components/schemas/ProductThicknessEnum"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductThicknessEnum": {
        "type": "string",
        "enum": [
          "THIN",
          "NORMAL",
          "THICK"
        ]
      },
      "ProductReviewReportDto": {
        "type": "object",
        "required": [
          "reason"
        ],
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "UserBirthYearDto": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthYear": {
            "type": "integer",
            "format": "int32"
          },
          "bodySizeData": {
            "$ref": "#/components/schemas/UserBodySizeDataDto"
          }
        }
      },
      "UserBodySizeDataDto": {
        "type": "object",
        "properties": {
          "heightAsCentiMeter": {
            "type": "integer",
            "format": "int32"
          },
          "weightAsKiloGram": {
            "type": "integer",
            "format": "int32"
          },
          "topSize": {
            "type": "integer",
            "format": "int32"
          },
          "bottomSizeAsInch": {
            "type": "integer",
            "format": "int32"
          },
          "shoeSizeAsMilliMeter": {
            "type": "integer",
            "format": "int32"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "ExternalUidDto": {
        "type": "object",
        "properties": {
          "externalUid": {
            "type": "string"
          }
        }
      },
      "ConnectPayCredentialDto": {
        "type": "object",
        "required": [
          "clientKey",
          "customerKey",
          "redirectUrl"
        ],
        "properties": {
          "clientKey": {
            "type": "string",
            "description": "커넥트페이 JS SDK 인증용 clientKey"
          },
          "customerKey": {
            "type": "string",
            "description": "결제 요청시 사용되는 user의 external uid"
          },
          "redirectUrl": {
            "type": "string",
            "description": "커넥트페이 OAuth 인증 시 사용될 redirect url"
          }
        }
      },
      "PaymentMethodResponseDto": {
        "type": "object",
        "required": [
          "cards",
          "accounts"
        ],
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardPaymentDto"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountPaymentDto"
            }
          }
        }
      },
      "CardPaymentDto": {
        "type": "object",
        "required": [
          "methodId",
          "cardCompany",
          "cardName",
          "iconUrl",
          "maskedCardNumber",
          "enabled",
          "registeredAtMillis"
        ],
        "properties": {
          "methodId": {
            "type": "string",
            "description": "결제 수단 Id, 커넥트페이 결제요청시 사용"
          },
          "cardCompany": {
            "$ref": "#/components/schemas/TossPaymentCardEnum"
          },
          "unknownCardCompanyName": {
            "type": "string",
            "description": "cardCompany 값이 `UNKNOWN`인 경우 해당하는 카드사의 이름, unknown이 아닐 경우 null"
          },
          "cardName": {
            "type": "string",
            "description": "카드 이름"
          },
          "iconUrl": {
            "type": "string",
            "description": "카드사 아이콘 이미지 url"
          },
          "maskedCardNumber": {
            "type": "string",
            "description": "마스킹된 카드 번호"
          },
          "enabled": {
            "type": "boolean"
          },
          "registeredAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "등록일"
          }
        }
      },
      "AccountPaymentDto": {
        "type": "object",
        "required": [
          "methodId",
          "bank",
          "iconUrl",
          "maskedAccountNumber",
          "enabled",
          "registeredAtMillis"
        ],
        "properties": {
          "methodId": {
            "type": "string",
            "description": "결제 수단 Id, 커넥트페이 결제요청시 사용"
          },
          "bank": {
            "$ref": "#/components/schemas/TossPaymentAccountEnum"
          },
          "unknownBankName": {
            "type": "string",
            "description": "bank 값이 `UNKNOWN`인 경우 해당하는 은행의 이름, unknown이 아닐 경우 null"
          },
          "iconUrl": {
            "type": "string",
            "description": "은행 아이콘 이미지 url"
          },
          "maskedAccountNumber": {
            "type": "string",
            "description": "마스킹된 계좌 번호"
          },
          "enabled": {
            "type": "boolean"
          },
          "registeredAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "등록일"
          }
        }
      },
      "TierDto": {
        "type": "object",
        "required": [
          "uid",
          "totalPurchaseAmount",
          "tierRankType"
        ],
        "properties": {
          "uid": {
            "description": "유저 아이디",
            "type": "string"
          },
          "totalPurchaseAmount": {
            "description": "누적 구매확정 금액(지난 3개월 치 구매 확정 금액, ex-8월 7일 조회 시 5,6,7월 통계 총합 금액)",
            "type": "integer",
            "format": "int64"
          },
          "tierRankType": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          }
        }
      },
      "TierRankTypeEnum": {
        "type": "string",
        "description": "티어 타입",
        "enum": [
          "DIAMOND",
          "PLATINUM",
          "GOLD",
          "SILVER"
        ]
      },
      "NextTierInfoDto": {
        "type": "object",
        "required": [
          "uid",
          "nextTierRankType",
          "startTierRankTypeForGraph",
          "endTierRankTypeForGraph",
          "totalPurchaseAmount",
          "remainAmount",
          "startAtMillis"
        ],
        "properties": {
          "uid": {
            "description": "유저 아이디",
            "type": "string"
          },
          "nextTierRankType": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          },
          "startTierRankTypeForGraph": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          },
          "endTierRankTypeForGraph": {
            "$ref": "#/components/schemas/TierRankTypeEnum"
          },
          "totalPurchaseAmount": {
            "description": "누적 구매확정 금액(지난 2개월 통계 금액 + 조회월 실시간 구매 확정 금액)",
            "type": "integer",
            "format": "int64"
          },
          "remainAmount": {
            "description": "다음 티어까지 남은 금액(총 금액이 다음 티어등급 초과 시 다다음 티어 금액까지 남은 금액 출력)",
            "type": "integer",
            "format": "int64"
          },
          "startAtMillis": {
            "type": "integer",
            "format": "int64",
            "description": "티어 등급 산정 시작 기간"
          },
          "tierChangeStatus": {
            "$ref": "#/components/schemas/TierChangeStatusEnum"
          }
        }
      },
      "TierChangeStatusEnum": {
        "type": "string",
        "description": "티어 변경 상태 타입",
        "enum": [
          "RISE",
          "HOLD",
          "FALL"
        ]
      },
      "ImageCategoryEnum": {
        "type": "string",
        "enum": [
          "PRODUCT_REVIEW",
          "ORDER_LINE_RETURN"
        ]
      },
      "UploadableImageResponseDto": {
        "type": "object",
        "required": [
          "url",
          "uploadedUrl",
          "expiredAtMillis"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "uploadedUrl": {
            "type": "string"
          },
          "expiredAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UploadImageResponseDto": {
        "type": "object",
        "required": [
          "imageUrl",
          "multiResolutionImage"
        ],
        "properties": {
          "imageUrl": {
            "description": "DEPRECATED",
            "type": "string"
          },
          "multiResolutionImage": {
            "$ref": "#/components/schemas/MultiResolutionImageDto"
          }
        }
      },
      "Base64ImageUploadRequestDto": {
        "type": "object",
        "required": [
          "name",
          "base64"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "base64": {
            "type": "string"
          }
        }
      },
      "ShopLiveTokenResponseDto": {
        "type": "object",
        "required": [
          "accessToken"
        ],
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "7일 뒤에 만료됨"
          }
        }
      },
      "ShopLiveTokenRequestDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "사용자 채팅명"
          }
        }
      },
      "ShopLiveCampaignMetadataResponseDto": {
        "type": "object",
        "required": [
          "campaignAccessKey",
          "campaignMetadataState"
        ],
        "properties": {
          "campaignKey": {
            "type": "string",
            "description": "캠페인 key"
          },
          "campaignAccessKey": {
            "type": "string",
            "description": "캠페인 Access key"
          },
          "title": {
            "type": "string",
            "description": "캠페인 제목"
          },
          "campaignMetadataState": {
            "$ref": "#/components/schemas/ShopLiveCampaignMetadataStateEnum"
          },
          "liveUrl": {
            "type": "string",
            "description": "영상 재생 URL"
          },
          "posterUrl": {
            "type": "string",
            "description": "방송 예고 이미지 URL"
          },
          "poster2Url": {
            "type": "string",
            "description": "방송 종료 후 이미지 URL"
          },
          "scheduledAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 예정 시간"
          },
          "scheduledEndAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 종료 예정 시간"
          },
          "startedAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 시작 시간"
          },
          "closingAt": {
            "type": "integer",
            "format": "int64",
            "description": "n분 후 종료를 설정했을 때 실제 종료 예정 시간"
          },
          "endedAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 종료 시간"
          }
        }
      },
      "ShopLiveCampaignResponseDto": {
        "type": "object",
        "required": [
          "campaignAccessKey",
          "campaignState"
        ],
        "properties": {
          "campaignKey": {
            "type": "string",
            "description": "캠페인 key"
          },
          "campaignAccessKey": {
            "type": "string",
            "description": "캠페인 Access key"
          },
          "campaignUrl": {
            "type": "string",
            "description": "캠페인 URL"
          },
          "title": {
            "type": "string",
            "description": "캠페인 제목"
          },
          "memo": {
            "type": "string",
            "description": "캠페인 메모"
          },
          "campaignState": {
            "$ref": "#/components/schemas/ShopLiveCampaignStateEnum"
          },
          "campaignGoodsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopLiveCampaignGoodsDto"
            }
          },
          "campaignGoodsCount": {
            "type": "integer",
            "format": "int32",
            "description": "캠페인에 등록 상품 개수"
          },
          "userCount": {
            "type": "integer",
            "format": "int32",
            "description": "누적 시청자 수"
          },
          "adoreCount": {
            "type": "integer",
            "format": "int32",
            "description": "좋아요 수"
          },
          "posterUrl": {
            "type": "string",
            "description": "방송 예고 이미지 URL"
          },
          "poster2Url": {
            "type": "string",
            "description": "방송 종료 후 이미지 URL"
          },
          "unsupportInfoUrl": {
            "type": "string",
            "description": "IE 미지원 안내 이미지 URL"
          },
          "previewLiveUrl": {
            "type": "string",
            "description": "방송 미리보기 URL"
          },
          "replayLiveUrl": {
            "type": "string",
            "description": "방송 다시보기 URL"
          },
          "liveUrl": {
            "type": "string",
            "description": "영상 재생 URL"
          },
          "backgroundUrl": {
            "type": "string",
            "description": "배경 이미지 URL"
          },
          "scheduledAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 예정 시간"
          },
          "scheduledEndAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 종료 예정 시간"
          },
          "startedAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 시작 시간"
          },
          "endedAt": {
            "type": "integer",
            "format": "int64",
            "description": "방송 종료 시간"
          }
        }
      },
      "ShopLiveCampaignGoodsDto": {
        "type": "object",
        "required": [
          "campaignId",
          "goodsId",
          "name",
          "url",
          "action",
          "payload",
          "showingNow",
          "soldOut",
          "originalPrice",
          "currency",
          "traceId"
        ],
        "properties": {
          "campaignId": {
            "type": "integer",
            "format": "int64",
            "description": "캠페인 ID"
          },
          "goodsId": {
            "type": "integer",
            "format": "int64",
            "description": "상품 ID"
          },
          "name": {
            "type": "string",
            "description": "상품명"
          },
          "brand": {
            "type": "string",
            "description": "상품 브랜드"
          },
          "description": {
            "type": "string",
            "description": "상품 설명"
          },
          "url": {
            "type": "string",
            "description": "상품 이동 URL"
          },
          "sku": {
            "type": "string",
            "description": "상품 코드"
          },
          "action": {
            "$ref": "#/components/schemas/ShopLiveCampaignGoodsActionTypeEnum"
          },
          "payload": {
            "type": "string",
            "description": "상품 클릭시 이동할 URL 정보를 포함하는 json string"
          },
          "medias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopLiveCampaignGoodsMediaDto"
            }
          },
          "showingNow": {
            "type": "boolean",
            "description": "상품 노출 여부"
          },
          "soldOut": {
            "type": "boolean",
            "description": "상품 매진 여부"
          },
          "originalPrice": {
            "type": "number",
            "format": "double",
            "description": "상품 기본 가격"
          },
          "discountedPrice": {
            "type": "number",
            "format": "double",
            "description": "상품 할인 가격"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "description": "상품 할인율"
          },
          "currency": {
            "type": "string",
            "description": "재화 단위"
          },
          "traceId": {
            "type": "string",
            "description": "상풐 클릭 추적 ID"
          }
        }
      },
      "ShopLiveCampaignGoodsMediaDto": {
        "type": "object",
        "required": [
          "id",
          "mediaType",
          "url",
          "size",
          "width",
          "height"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "미디어 ID"
          },
          "mediaType": {
            "$ref": "#/components/schemas/ShopLiveCampaignGoodsMediaTypeEnum"
          },
          "url": {
            "type": "string",
            "description": "상품 미디어 URL"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "상품 미디어 사이즈"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "상품 미디어 가로 사이즈"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "상품 미디어 세로 사이즈"
          }
        }
      },
      "ReferralCodeDto": {
        "type": "object",
        "required": [
          "referralCode"
        ],
        "properties": {
          "referralCode": {
            "type": "string"
          }
        }
      },
      "CategoryBestProductDto": {
        "type": "object",
        "required": [
          "isBest"
        ],
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "categoryTitle": {
            "type": "string"
          },
          "isBest": {
            "type": "boolean"
          },
          "createdAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "updatedAtMillis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ShopLiveCampaignMetadataStateEnum": {
        "type": "string",
        "description": "- `NOT_EXIST` -> 존재하지 않는 캠페인\n- `READY` -> 준비중\n- `ONAIR` -> 방송중\n- `CLOSING` -> 종료중\n- `CLOSED` -> 종료\n",
        "enum": [
          "NOT_EXIST",
          "READY",
          "ONAIR",
          "CLOSING",
          "CLOSED"
        ]
      },
      "ShopLiveCampaignStateEnum": {
        "type": "string",
        "description": "- `NOT_EXIST` -> 존재하지 않는 캠페인\n- `READY` -> 준비중\n- `ONAIR` -> 방송중\n- `CLOSED` -> 종료\n",
        "enum": [
          "NOT_EXIST",
          "READY",
          "ONAIR",
          "CLOSED"
        ]
      },
      "ShopLiveCampaignGoodsActionTypeEnum": {
        "type": "string",
        "enum": [
          "LINK"
        ]
      },
      "ShopLiveCampaignGoodsMediaTypeEnum": {
        "type": "string",
        "enum": [
          "IMAGE"
        ]
      },
      "MultiResolutionImageDto": {
        "type": "object",
        "required": [
          "url_1x",
          "url_2x",
          "url_3x"
        ],
        "properties": {
          "url_1x": {
            "type": "string"
          },
          "url_2x": {
            "type": "string"
          },
          "url_3x": {
            "type": "string"
          }
        }
      },
      "MultiResolutionImageListDto": {
        "type": "object",
        "required": [
          "urls_1x",
          "urls_2x",
          "urls_3x"
        ],
        "properties": {
          "urls_1x": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urls_2x": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urls_3x": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SellerContentImagesDto": {
        "type": "object",
        "required": [
          "contentType",
          "multiResolutionImages"
        ],
        "properties": {
          "contentType": {
            "$ref": "damoa-seller-api.yaml#/components/schemas/SellerContentTypeEnum"
          },
          "multiResolutionImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiResolutionImageDto"
            }
          }
        }
      },
      "UserDeliveryAddressAddRequestDto": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "request": {
            "type": "string",
            "description": "배송 요청 사항"
          }
        }
      },
      "UserDeliveryAddressDto": {
        "type": "object",
        "required": [
          "id",
          "address"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "address": {
            "$ref": "#/components/schemas/DeliveryAddressDto"
          },
          "request": {
            "type": "string",
            "description": "배송 요청 사항"
          }
        }
      },
      "PointHistoryBundleResponseDto": {
        "type": "object",
        "required": [
          "PointHistoyDto"
        ],
        "properties": {
          "PointHistories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointHistoryResponseDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "PointHistoryResponseDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "amount",
          "amountType",
          "expiredDetails",
          "occurrenceAtMillis",
          "occurrenceType",
          "occurrenceId"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "적립금 히스토리 고유 아이디"
          },
          "title": {
            "type": "string"
          },
          "subTitle": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "amountType": {
            "$ref": "#/components/schemas/PointAmountTypeEnum"
          },
          "expiredDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointAccumulateDetailResponseDto"
            }
          },
          "occurrenceAtMillis": {
            "description": "적립금 히스토리 발생 시간 (epochMilliSeconds)",
            "type": "integer",
            "format": "int64"
          },
          "occurrenceType": {
            "$ref": "#/components/schemas/PointOccurrenceTypeEnum"
          },
          "occurrenceId": {
            "description": "적립금 발생 원 ID occurrenceType에 따라 다른 분기",
            "type": "string"
          }
        }
      },
      "PointAmountTypeEnum": {
        "type": "string",
        "enum": [
          "PLUS",
          "MINUS"
        ]
      },
      "PointOccurrenceTypeEnum": {
        "type": "string",
        "description": "- 적립금 적립/사용/소멸/취소 발생 타입\n- ACCUMULATE_EVENT 이벤트로 적립됨\n- ACCUMULATE_ORDER_ACCEPT 주문 확정으로 적립됨\n- WITHDRAW_ORDER_CANCEL 주문 취소로 환불적립됨\n- USE_ADMIN 관리자가 차감함\n- ACCUMULATE_ADMIN 관리자 권한으로 적립됨\n- USE_ORDER_CREATE 주문 생성으로 사용됨\n- EXPIRED 기한 만료됨\n",
        "enum": [
          "ACCUMULATE_EVENT",
          "ACCUMULATE_ORDER_ACCEPT",
          "WITHDRAW_ORDER_CANCEL",
          "USE_ADMIN",
          "ACCUMULATE_ADMIN",
          "USE_ORDER_CREATE",
          "EXPIRED"
        ]
      },
      "PointAccumulateDetailResponseDto": {
        "type": "object",
        "required": [
          "id",
          "expiredAtMillis",
          "amount"
        ],
        "properties": {
          "id": {
            "description": "적립금 히스토리 고유 상세 아이디",
            "type": "string"
          },
          "expiredAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NowUsablePointDto": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PromotionAttendedStateDto": {
        "type": "object",
        "required": [
          "attended"
        ],
        "properties": {
          "attended": {
            "type": "boolean"
          }
        }
      },
      "ProductAggregationDto": {
        "type": "object",
        "description": "상품 집계(aggregation)",
        "required": [
          "productFeatureGroupAggregationList"
        ],
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "productFeatureGroupAggregationList": {
            "deprecated": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureGroupAggregationDto"
            }
          },
          "productAggregationGroup": {
            "$ref": "#/components/schemas/ProductAggregationGroupDto"
          }
        }
      },
      "ProductAggregationGroupDto": {
        "type": "object",
        "description": "상품 집계 정보 그룹",
        "required": [
          "productFeatureGroupAggregationList",
          "productCategoryAggregationList",
          "brandAggregationList"
        ],
        "properties": {
          "productFeatureGroupAggregationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureGroupAggregationDto"
            }
          },
          "productCategoryAggregationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryAggregationDto"
            }
          },
          "brandAggregationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandAggregationDto"
            }
          }
        }
      },
      "ProductFeatureGroupAggregationDto": {
        "type": "object",
        "description": "group 별로 속성 태그 개수 내림차순으로 내려준다",
        "properties": {
          "group": {
            "$ref": "#/components/schemas/ProductFeatureGroupDto"
          },
          "productFeatureAggregation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureAggregationDto"
            }
          }
        }
      },
      "ProductFeatureAggregationDto": {
        "type": "object",
        "properties": {
          "productFeature": {
            "$ref": "#/components/schemas/ProductFeatureDto"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductCategoryAggregationDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BrandAggregationDto": {
        "type": "object",
        "properties": {
          "brandName": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductFeatureListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductFeatureDto"
            }
          }
        }
      },
      "ProductFeatureDto": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "groupId": {
            "type": "string"
          },
          "groupTitle": {
            "type": "string"
          }
        }
      },
      "ProductFeatureGroupDto": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "UserReferralSummaryDto": {
        "type": "object",
        "required": [
          "totalAccrualPoint",
          "totalReferralCount",
          "totalUnopenedBonusBoxCount"
        ],
        "properties": {
          "totalAccrualPoint": {
            "description": "유저 추천 총 적립액 (보너스 보상 포함)",
            "type": "integer",
            "format": "int64"
          },
          "totalReferralCount": {
            "description": "총 유저 추천 수",
            "type": "integer",
            "format": "int64"
          },
          "totalUnopenedBonusBoxCount": {
            "description": "아직 열지않은 보너스 상자 수",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserReferralRewardSummaryDto": {
        "type": "object",
        "required": [
          "totalAccrualPoint",
          "totalReferral"
        ],
        "properties": {
          "totalAccrualPoint": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UserReferralBonusBoxOpenResultDto": {
        "type": "object",
        "required": [
          "pointAmount"
        ],
        "properties": {
          "pointAmount": {
            "type": "integer",
            "format": "int64",
            "description": "BonusBox 에서 얻은 적립금"
          }
        }
      },
      "UserReferralRewardPolicyDto": {
        "type": "object",
        "required": [
          "totalAccrualLimitByReferral",
          "validDaysByReferral",
          "joinRewardAmountForReferee",
          "bonusBoxPolicies"
        ],
        "properties": {
          "totalAccrualLimitByReferral": {
            "type": "integer",
            "format": "int64"
          },
          "validDaysByReferral": {
            "type": "integer",
            "format": "int32"
          },
          "joinRewardAmountForReferee": {
            "type": "integer",
            "format": "int64"
          },
          "bonusBoxPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BonusBoxPolicyDto"
            }
          }
        }
      },
      "BonusBoxPolicyDto": {
        "type": "object",
        "description": "보너스 박스를 발급하기 위한 정책",
        "required": [
          "bonusRewardType",
          "referralCount"
        ],
        "properties": {
          "bonusRewardType": {
            "$ref": "#/components/schemas/BonusRewardTypeEnum"
          },
          "referralCount": {
            "description": "bonusBox 를 받기 위해 충족해야 할 referral 수",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BonusRewardTypeEnum": {
        "type": "string",
        "enum": [
          "REPEAT",
          "ONE_TIME"
        ],
        "description": "보너스 박스 발급정책 유형: * 반복형 보상 (REPEAT): referralCount 를 만족할 때 마다 보너스 박스 지급 (예: 5로 설정 시 5,10,15,20.. 마다 지급) * 일회성 보상 (ONE_TIME): referralCount 만족 시 일회 지급\n"
      },
      "UserReferralRewardEstimationRequestDto": {
        "type": "object",
        "required": [
          "phoneNumbers"
        ],
        "properties": {
          "phoneNumbers": {
            "type": "array",
            "maxItems": 50,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserReferralRewardEstimationDto": {
        "type": "object",
        "required": [
          "phoneNumber",
          "pointAmount",
          "rewarded"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "pointAmount": {
            "type": "integer",
            "format": "int64",
            "description": "추천 적립금 예상금액"
          },
          "rewarded": {
            "type": "boolean",
            "description": "이미 추천을 통해 보상 받았는지 여부"
          }
        }
      },
      "UserReferralRewardEstimationListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReferralRewardEstimationDto"
            }
          }
        }
      },
      "CreateUserReferralRequestDto": {
        "type": "object",
        "required": [
          "phoneNumber",
          "referrerName",
          "dynamicLink"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string"
          },
          "referrerName": {
            "type": "string"
          },
          "dynamicLink": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreateUserReferralResponseDto": {
        "type": "object",
        "required": [
          "reward"
        ],
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/ReferralRewardResultDto"
          }
        }
      },
      "CreateProductReferralRequestDto": {
        "type": "object",
        "required": [
          "orderLineId",
          "productId",
          "referralCode"
        ],
        "properties": {
          "orderLineId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "referralCode": {
            "type": "string"
          }
        }
      },
      "ReferralRewardResultDto": {
        "type": "object",
        "description": "추천 보상 정보",
        "required": [
          "pointAmount"
        ],
        "properties": {
          "pointAmount": {
            "type": "integer",
            "format": "int64",
            "description": "적립금 액수"
          }
        }
      },
      "JoinReferredUserRequestDto": {
        "type": "object",
        "required": [
          "referralCode"
        ],
        "properties": {
          "referralCode": {
            "type": "string"
          }
        }
      },
      "JoinReferredUserResponseDto": {
        "type": "object",
        "required": [
          "reward"
        ],
        "properties": {
          "reward": {
            "$ref": "#/components/schemas/ReferralRewardResultDto"
          }
        }
      },
      "ActiveGameListResponse": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDto"
            }
          }
        }
      },
      "GameUserProgressInfoResponse": {
        "type": "object",
        "required": [
          "level",
          "exp",
          "requiredExpToNextLevel",
          "inGameCredit",
          "isGameAchievable",
          "gameAchievedCount"
        ],
        "properties": {
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "exp": {
            "type": "integer",
            "format": "int32"
          },
          "requiredExpToNextLevel": {
            "type": "integer",
            "format": "int32"
          },
          "inGameCredit": {
            "type": "integer",
            "format": "int32"
          },
          "isGameAchievable": {
            "type": "boolean"
          },
          "gameAchievedCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameUseInGameCreditRequest": {
        "type": "object",
        "required": [
          "useCredit"
        ],
        "properties": {
          "useCredit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameDto": {
        "type": "object",
        "required": [
          "gameId",
          "title",
          "rewardTitle"
        ],
        "properties": {
          "gameId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "rewardTitle": {
            "description": "보상명 (ex. 커피 기프티콘)",
            "type": "string"
          }
        }
      },
      "GameMissionsResponse": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMissionDto"
            }
          }
        }
      },
      "GameMissionAchieveRequest": {
        "type": "object",
        "required": [
          "missionType"
        ],
        "properties": {
          "missionType": {
            "$ref": "#/components/schemas/GameMissionTypeEnum"
          },
          "referenceId": {
            "description": "미션에 따라 부가 정보를 담기 위한 필드 (ex. 기획전 ID)",
            "type": "string"
          }
        }
      },
      "GameMissionRewardReceiveResponse": {
        "type": "object",
        "required": [
          "inGameCredit"
        ],
        "properties": {
          "inGameCredit": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameMissionDto": {
        "type": "object",
        "required": [
          "id",
          "title",
          "inGameCreditReward",
          "missionType",
          "completeCount",
          "isRewardReceivable"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "inGameCreditReward": {
            "type": "integer",
            "format": "int32"
          },
          "repeatIntervalInMins": {
            "type": "integer",
            "format": "int64"
          },
          "missionType": {
            "$ref": "#/components/schemas/GameMissionTypeEnum"
          },
          "referenceId": {
            "description": "미션에 따라 부가 정보를 담기 위한 필드 (ex. 기획전 ID)",
            "type": "string"
          },
          "resetCycleDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxCompleteCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastCompletedAtMillis": {
            "type": "integer",
            "format": "int64"
          },
          "completeCount": {
            "type": "integer",
            "format": "int32"
          },
          "isRewardReceivable": {
            "type": "boolean"
          }
        }
      },
      "GameAchieveRequest": {
        "type": "object",
        "required": [
          "phoneNumber"
        ],
        "properties": {
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "GameMissionTypeEnum": {
        "type": "string",
        "enum": [
          "PURCHASE_PRODUCT",
          "FE_VALID_ATTENDANCE",
          "FE_VALID_VIEWING_TO_30_SEC_RECOMMENDED",
          "FE_VALID_VIEWING_TO_30_SEC_STYLE_SHOT",
          "FE_VALID_VIEWING_TO_30_SEC_COLLECTION",
          "FE_VALID_VIEWING_TO_30_SEC_NEW_IN_PRODUCT",
          "FE_VALID_VIEWING_TO_30_SEC_BEST",
          "FE_VALID_VIEWING_TO_30_SEC_HOT_DEAL",
          "FE_VALID_VIEWING_TO_30_SEC_SHOPPING_MALL",
          "FE_VALID_VIEWING_TO_30_SEC_DESIGNER"
        ]
      },
      "AutocompleteResponseDto": {
        "type": "object",
        "required": [
          "brands"
        ],
        "properties": {
          "brands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandAutocompleteCandidateDto"
            }
          }
        }
      },
      "BrandAutocompleteCandidateDto": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ProductCategoryReviewGuideDataDto": {
        "type": "object",
        "required": [
          "textGuides",
          "imageWithTitles",
          "type",
          "gridImage"
        ],
        "properties": {
          "textGuides": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageWithTitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryReviewGuideImageWithTitleDto"
            }
          },
          "type": {
            "$ref": "#/components/schemas/ProductCategoryReviewGuideTypeEnum"
          },
          "gridImage": {
            "type": "string"
          }
        }
      },
      "ProductCategoryReviewGuideTypeEnum": {
        "description": "사진 리뷰 가이드의 타입",
        "type": "string",
        "enum": [
          "IMAGE_WITH_TITLE",
          "GRID_IMAGE",
          "NONE"
        ]
      },
      "StyleShotListDto": {
        "type": "object",
        "required": [
          "list",
          "last"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StyleShotDto"
            }
          },
          "nextCursor": {
            "type": "string"
          },
          "last": {
            "type": "boolean"
          }
        }
      },
      "StyleShotDto": {
        "type": "object",
        "required": [
          "id",
          "styleShotImages",
          "styleCategory",
          "equippedProductItemIds"
        ],
        "properties": {
          "id": {
            "description": "스타일 샷 id",
            "type": "string"
          },
          "styleShotImages": {
            "description": "스타일 샷 이미지 url",
            "type": "array",
            "minItems": 1,
            "maxItems": 4,
            "items": {
              "$ref": "#/components/schemas/StyleShotImageDto"
            }
          },
          "styleShotTags": {
            "description": "스타일 샷 태그 id 리스트",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "styleCategory": {
            "$ref": "#/components/schemas/StyleCategoryDto"
          },
          "equippedProductItemIds": {
            "description": "착용 상품 아이템 ID, empty list만 응답(deprecated)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "text": {
            "type": "string"
          },
          "editor": {
            "type": "string"
          },
          "fashionModelHeightAsCentiMeter": {
            "type": "integer",
            "format": "int32"
          },
          "fashionModelWeightAsKiloGram": {
            "type": "integer",
            "format": "int32"
          },
          "fashionModelShoeSizeAsMilliMeter": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EquippedProductListDto": {
        "type": "object",
        "required": [
          "equippedProducts",
          "favoriteIds",
          "freeReturnTargetProductIds"
        ],
        "properties": {
          "equippedProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EquippedProductDto"
            }
          },
          "freeReturnTargetProductIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StyleShotImageDto": {
        "required": [
          "id",
          "url_1x",
          "url_2x",
          "url_3x",
          "priority"
        ],
        "properties": {
          "id": {
            "description": "이미지 id",
            "type": "string"
          },
          "url_1x": {
            "type": "string"
          },
          "url_2x": {
            "type": "string"
          },
          "url_3x": {
            "type": "string"
          },
          "priority": {
            "description": "이미지 조회 시 순서(1부터 오름차순)",
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StyleCategoryDto": {
        "type": "object",
        "required": [
          "id",
          "name",
          "priority"
        ],
        "properties": {
          "id": {
            "description": "스타일 카테고리 id",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "스타일 카테고리 한글명",
            "type": "string"
          },
          "representative_url_1x": {
            "type": "string"
          },
          "representative_url_2x": {
            "type": "string"
          },
          "representative_url_3x": {
            "type": "string"
          },
          "priority": {
            "description": "스타일 카테고리 조회 시 순서",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StyleCategoryListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StyleCategoryDto"
            }
          }
        }
      },
      "DeliveryPredictionListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryPredictionDto"
            }
          }
        }
      },
      "DeliveryPredictionDto": {
        "type": "object",
        "required": [
          "kstDeliveryPredictionDate",
          "probability"
        ],
        "properties": {
          "kstDeliveryPredictionDate": {
            "type": "string",
            "description": "ISO-8601 format string (uuuu-MM-dd)"
          },
          "probability": {
            "description": "해당 일자에 배송이 완료될 확률",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurchaseMeasurementsStatisticsListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseMeasurementsStatisticsDto"
            }
          }
        }
      },
      "PurchaseMeasurementsStatisticsDto": {
        "type": "object",
        "required": [
          "size",
          "count",
          "ratio"
        ],
        "properties": {
          "size": {
            "description": "상품 사이즈 옵션 타이틀",
            "type": "string"
          },
          "count": {
            "description": "구매 개수",
            "type": "integer",
            "format": "int64"
          },
          "ratio": {
            "description": "전체 구매 개수에 대한 비율",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PurchaseMeasurementsDto": {
        "type": "object",
        "required": [
          "bodySizeType",
          "isSimilarBodySize",
          "list"
        ],
        "properties": {
          "bodySizeType": {
            "$ref": "#/components/schemas/BodySizeTypeEnum"
          },
          "isSimilarBodySize": {
            "description": "유사체형 구매데이터 인지 여부",
            "type": "boolean"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaserSizeDto"
            }
          }
        }
      },
      "PurchaserSizeDto": {
        "type": "object",
        "required": [
          "purchaserBodySize",
          "purchaseSizeOptionName"
        ],
        "properties": {
          "purchaserBodySize": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaserBodySizeDto"
            }
          },
          "purchaseSizeOptionName": {
            "description": "구매한 사이즈 옵션 타이틀",
            "type": "string"
          }
        }
      },
      "PurchaserBodySizeDto": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BodySizeTypeEnum"
          },
          "value": {
            "description": "구매자의 사이즈",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BodySizeTypeEnum": {
        "type": "string",
        "enum": [
          "HEIGHT_AS_CENTI_METER",
          "WEIGHT_AS_KILO_GRAM",
          "TOP_SIZE",
          "BOTTOM_SIZE_AS_INCH",
          "SHOE_SIZE_AS_MILLI_METER"
        ]
      },
      "AttendanceCheckHistoryListDto": {
        "type": "object",
        "required": [
          "list"
        ],
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceCheckHistoryDto"
            }
          }
        }
      },
      "AttendanceCheckHistoryDto": {
        "type": "object",
        "required": [
          "days",
          "attended",
          "rewardPolicyType",
          "pointAmount"
        ],
        "properties": {
          "days": {
            "description": "출석 체크 n일차",
            "type": "integer",
            "format": "int32"
          },
          "pointAmount": {
            "description": "출석 체크 참여 시 적립금 금액",
            "type": "integer",
            "format": "int64"
          },
          "attended": {
            "description": "출석 체크 참여 여부",
            "type": "boolean"
          },
          "attendedAt": {
            "description": "출석 체크 참여 시간 epochMillis(출석치 않았을 때 null)",
            "type": "integer",
            "format": "int64"
          },
          "rewardPolicyType": {
            "$ref": "#/components/schemas/AttendanceRewardPolicyTypeEnum"
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "description": "reason for error"
          },
          "traceId": {
            "type": "string",
            "description": "trace id for debug"
          },
          "code": {
            "type": "number",
            "x-enum-varnames": [
              "INTERNAL_FAILURE",
              "EXTERNAL_FAILURE",
              "ALREADY_EXISTS",
              "NOT_AUTHORIZED",
              "INVALID_VALUE",
              "RESOURCE_NOT_FOUND",
              "LIMITATION_EXCEEDED",
              "LOGIN_REQUIRED",
              "ACCESS_DENIED",
              "ACCESS_TOKEN_EXPIRED",
              "REFRESH_TOKEN_EXPIRED",
              "INVALID_ACCESS_TOKEN",
              "INVALID_REFRESH_TOKEN",
              "COUPON_NOT_ENABLED",
              "COUPON_NOT_CONSUMABLE",
              "COUPON_ISSUE_BEFORE_BEGIN",
              "COUPON_ISSUE_AFTER_END",
              "COUPON_ISSUE_LIMIT_EXCEEDED",
              "COUPON_ISSUE_LIMIT_PER_USER_EXCEEDED",
              "COUPON_ISSUE_NOT_TARGET",
              "COUPON_BOOK_ISSUABLES_NOT_EXIST",
              "DISPLAYING_COUPONS_ISSUABLE_NOT_EXIST",
              "PAYMENT_NOT_FULLY_PAID",
              "MINIMUM_PAYMENT_PRICE_LIMIT_EXCEPTION",
              "REVIEW_REPORTED_BY_SELF",
              "REVIEW_REPORTED_TWICE",
              "VALIDATAION_BANK_ACCOUNT_FAILURE",
              "DUPLICATED_MALL_PRODUCT_CODE",
              "PRODUCT_WITHOUT_POLICY_TARGET",
              "DUPLICATED_BRAND_CODE",
              "SEND_DELIVERY_TRACE_REQUEST_FAILED",
              "RECEIVE_DELIVERY_TRACE_RESULT_FAILED",
              "SEND_DELIVERY_TRACE_RESULT_RESPONSE_FAILED",
              "TICKET_PROCESSING_IS_REQUIRED_TO_CONFIRM_RECEIPT",
              "CAN_ONLY_CONFIRM_RECEIPT_OF_PAID_ORDER_LINE",
              "CANNOT_CONFIRM_RECEIPT_WHEN_DELIVERY_NOT_COMPLETE",
              "CANNOT_REQUEST_REFUND_AFTER_CONFIRM_RECEIPT",
              "LACK_OF_POINT",
              "ORDER_LINE_COUNT_LIMIT_PER_ORDER_EXCEEDED",
              "ORDER_ALREADY_DISPATCHED",
              "CANNOT_CHANGE_DELIVERY_AREA",
              "ORDER_UNAVAILABLE_PRODUCT_ITEM",
              "CANNOT_APPEND_TICKET",
              "CANNOT_EXCEED_ALREADY_REQUESTED_AMOUNT",
              "ATTENDANCE_CHECK_COMPLETED",
              "PRODUCT_NOT_BELONGS_TO_BRAND"
            ],
            "enum": [
              -999999,
              -888888,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              1001,
              1002,
              1003,
              1004,
              60001,
              60002,
              61001,
              61002,
              61003,
              61004,
              61005,
              62001,
              62002,
              70001,
              70003,
              2001,
              2002,
              3001,
              4001,
              4002,
              5001,
              6001,
              6002,
              6003,
              7001,
              7002,
              7003,
              7004,
              7005,
              7006,
              7007,
              7008,
              7009,
              7010,
              7011,
              8001,
              9001
            ]
          }
        }
      }
    }
  }
}