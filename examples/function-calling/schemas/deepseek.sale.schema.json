{
  "type": "object",
  "properties": {
    "input": {
      "description": "Creation information of sale.\n\n------------------------------\n\nDescription of the current {@link IShoppingSale.ICreate} type:\n\n> Creation information of sale.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSale} type:\n\n> Seller sales products.\n> \n> `IShoppingSale` is an entity that embodies \"product sales\" (sales)\n> information registered by the {@link ISoppingSeller seller}. And the main\n> information of the sale is recorded in the sub {@link IShoppingSaleSnapshot},\n> not in the main `IShoppingSale`. When a seller changes a previously registered\n> item, the existing `IShoppingSale` record is not changed, but a new\n> {@link IShoppingSaleSnapshot snapshot} record be created.\n> \n> This is to preserve the {@link IShoppingCustomer customer}'s\n> {@link IShoppingOrder purchase history} flawlessly after the customer\n> purchases a specific item, even if the seller changes the components or\n> price of the item. It is also intended to support sellers in so-called A/B\n> testing, which involves changing components or prices and measuring the\n> performance in each case.",
      "type": "object",
      "properties": {
        "section_code": {
          "title": "Belonged section's {@link IShoppingSection.code}",
          "description": "Belonged section's {@link IShoppingSection.code}.",
          "type": "string"
        },
        "status": {
          "title": "Initial status of the sale",
          "description": "Initial status of the sale.\n\n`null` or `undefined`: No restriction\n`paused`: Starts with {@link ITimestamps.paused_at paused} status\n`suspended`: Starts with {@link ITimestamps.suspended_at suspended} status",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string",
              "enum": [
                "paused",
                "suspended"
              ]
            }
          ]
        },
        "opened_at": {
          "title": "Opening time of the sale",
          "description": "Opening time of the sale.",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "closed_at": {
          "title": "Closing time of the sale",
          "description": "Closing time of the sale.\n\nIf this value is `null`, the sale be continued forever.",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        },
        "content": {
          "title": "Description and image content describing the sale",
          "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "format": {
              "description": "Description of the current {@link IShoppingSaleContent} type:\n\n> Content information of sale snapshot.\n> \n> `IShoppingSaleContent` is an entity embodies the description contents\n> of {@link IShoppingSale}.",
              "type": "string",
              "enum": [
                "html",
                "md",
                "txt"
              ]
            },
            "body": {
              "type": "string"
            },
            "files": {
              "type": "array",
              "items": {
                "description": "Description of the current {@link IAttachmentFile} type:\n\n> Attachment File.\n> \n> Every attachment files that are managed in current system.\n> \n> For reference, it is possible to omit one of file {@link name}\n> or {@link extension} like `.gitignore` or `README` case, but not\n> possible to omit both of them.",
                "type": "object",
                "properties": {
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.\n\n\n@maxLength 255",
                    "type": "string"
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "anyOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "description": "@minLength 1\n@maxLength 8"
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.\n\n\n@format uri",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "extension",
                  "url"
                ]
              }
            },
            "thumbnails": {
              "type": "array",
              "items": {
                "description": "Description of the current {@link IAttachmentFile} type:\n\n> Attachment File.\n> \n> Every attachment files that are managed in current system.\n> \n> For reference, it is possible to omit one of file {@link name}\n> or {@link extension} like `.gitignore` or `README` case, but not\n> possible to omit both of them.",
                "type": "object",
                "properties": {
                  "name": {
                    "title": "File name, except extension",
                    "description": "File name, except extension.\n\nIf there's file `.gitignore`, then its name is an empty string.\n\n\n@maxLength 255",
                    "type": "string"
                  },
                  "extension": {
                    "title": "Extension",
                    "description": "Extension.\n\nPossible to omit like `README` case.",
                    "anyOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string",
                        "description": "@minLength 1\n@maxLength 8"
                      }
                    ]
                  },
                  "url": {
                    "title": "URL path of the real file",
                    "description": "URL path of the real file.\n\n\n@format uri",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "extension",
                  "url"
                ]
              }
            }
          },
          "required": [
            "title",
            "format",
            "body",
            "files",
            "thumbnails"
          ]
        },
        "channels": {
          "title": "List of channels and categories",
          "description": "List of channels and categories.\n\nWhich channels and categories the sale is registered to.\n\n\n@minItems 1",
          "type": "array",
          "items": {
            "description": "Creation information of the target channel (and categories) of sale to sell.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleChannel.ICreate} type:\n\n> Creation information of the target channel (and categories) of sale to sell.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleChannel} type:\n\n> Target channel (and categories) of sale to sell.\n> \n> `IShoppingSaleChannel` is an entity that expresses through which\n> {@link IShoppingChannel channel} a listing {@link IShoppingSale} is sold.\n> \n> Also, if {@link IShoppingChannelCategory categories} are specified, it also\n> means that the sale be sold. Otherwise, none of the categories of the channel\n> being specified, it means that every categories of the channel is listing the\n> target sale.",
            "type": "object",
            "properties": {
              "code": {
                "title": "Target channel's {@link IShoppingChannel.code}",
                "description": "Target channel's {@link IShoppingChannel.code}.",
                "type": "string"
              },
              "category_codes": {
                "title": "List of target categories' {@link IShoppingChannelCategory.code}s",
                "description": "List of target categories' {@link IShoppingChannelCategory.code}s.\n\nIf empty, it means all categories of the channel is listing the sale.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "code",
              "category_codes"
            ]
          }
        },
        "units": {
          "title": "List of units",
          "description": "List of units.\n\nRecords about individual product composition information that are sold\nin the sale. Each {@link IShoppingSaleUnit unit} record has configurable\n{@link IShoppingSaleUnitOption options},\n{@link IShoppingSaleUnitOptionCandidate candidate} values for each\noption, and {@link IShoppingSaleUnitStock final stocks} determined by\nselecting every candidate values of each option.\n\n\n@minItems 1",
          "type": "array",
          "items": {
            "description": "Creation information of sale unit.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnit.ICreate} type:\n\n> Creation information of sale unit.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnit} type:\n\n> Product composition information handled in the sale.\n> \n> `IShoppingSaleUnit` is an entity that embodies the \"individual product\"\n> information handled in the {@link IShoppingSale sale}.\n> \n> For reference, the reason why `IShoppingSaleUnit` is separated from\n> {@link IShoppingSaleSnapshot} by an algebraic relationship of 1: N is because\n> there are some cases where multiple products are sold in one listing. This is\n> the case with so-called \"bundled products\".\n> \n> - Bundle from regular product (Mackbook Set)\n>   - Main Body\n>   - Keyboard\n>   - Mouse\n>   - Apple Care (Free A/S Voucher)\n> \n> And again, `IShoppingSaleUnit` does not in itself refer to the\n> {@link IShoppingSaleUnitStock final stock} that the\n> {@link IShoppingCustomer customer} will {@link IShoppingOrder purchase}.\n> The final stock can be found only after selecting all given\n> {@link IShoppingSaleUnitOption options} and their\n> {@link IShoppingSaleUnitOptionCandidate candidate values}.\n> \n> For example, even if you buy a Macbook, the final stocks are determined only\n> after selecting all the options (CPU / RAM / SSD), etc.",
            "type": "object",
            "properties": {
              "options": {
                "title": "List of options",
                "description": "List of options.",
                "type": "array",
                "items": {
                  "description": "Creation information of the selectable option.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitSelectableOption.ICreate} type:\n\n> Creation information of the selectable option.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitSelectableOption} type:\n\n> Individual option information on units for sale.\n> \n> `IShoppingSaleUnitSelectableOption` is a subsidiary entity of\n> {@link IShoppingSaleUnit} that represents individual products in the\n> {@link IShoppingSale sale}, and is an entity designed to represent individual\n> selectable option information for the unit.\n> \n> - Examples of Options\n>   - selectable options\n>     - Computer: CPU, RAM, SSD, etc.\n>     - Clothes: size, color, style, etc.\n>   - descriptive options\n>     - Engrave\n>     - Simple question\n> \n> If the {@link variable} property value is `true`, the final stock that the\n> {@link IShoppingCustomer customer} will purchase changes depending on the\n> selection of the {@link IShoppingSaleUnitOptionCandidate candidate value}.\n> \n> Conversely, if it is a type other than \"select\", or if the {@link variable}\n> property value is \"false\", , this is an option that has no meaning beyond\n> simple information transfer. Therefore, no matter what value the customer\n> chooses when purchasing it, the option in this case does not affect the\n> {@link IShoppingSaleUnitStock final stock}.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "Discriminant for the type of selectable option",
                      "description": "Discriminant for the type of selectable option.",
                      "type": "string",
                      "enum": [
                        "select"
                      ]
                    },
                    "name": {
                      "title": "Represents the name of the option",
                      "description": "Represents the name of the option.",
                      "type": "string"
                    },
                    "variable": {
                      "title": "Whether the option is variable or not",
                      "description": "Whether the option is variable or not.\n\nWhen type of current option is \"select\", this attribute means whether\nselecting different candidate value affects the final stock or not.",
                      "type": "boolean"
                    },
                    "candidates": {
                      "title": "List of candidate values",
                      "description": "List of candidate values.\n\n\n@minItems 1",
                      "type": "array",
                      "items": {
                        "description": "Creation information of the candidate value.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitOptionCandidate.ICreate} type:\n\n> Creation information of the candidate value.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitOptionCandidate} type:\n\n> Selectable candidate values within an option.\n> \n> `IShoppingSaleUnitOptionCandidate` is an entity that represents individual\n> candidate values that can be selected from\n> {@link IShoppingSaleUnitSelectableOption options of the \"select\" type}.\n> \n> - Example\n>   - RAM: 8GB, 16GB, 32GB\n>   - GPU: RTX 3060, RTX 4080, TESLA\n>   - License: Private, Commercial, Educatiion\n> \n> By the way, if belonged option is not \"select\" type, this entity never\n> being used.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Represents the name of the candidate value",
                            "description": "Represents the name of the candidate value.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "type",
                    "name",
                    "variable",
                    "candidates"
                  ]
                }
              },
              "stocks": {
                "title": "List of final stocks",
                "description": "List of final stocks.\n\n\n@minItems 1",
                "type": "array",
                "items": {
                  "description": "Creation information of the stock.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStock.ICreate} type:\n\n> Creation information of the stock.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStock} type:\n\n> Final component information on units for sale.\n> \n> `IShoppingSaleUnitStock` is a subsidiary entity of {@link IShoppingSaleUnit}\n> that represents a product catalog for sale, and is a kind of final stock that is\n> constructed by selecting all {@link IShoppingSaleUnitSelectableOption options}\n> (variable \"select\" type) and their\n> {@link IShoppingSaleUnitOptionCandidate candidate} values in the belonging unit.\n> It is the \"good\" itself that customers actually purchase.\n> \n> - Product Name) MacBook\n>   - Options\n>     - CPU: { i3, i5, i7, i9 }\n>     - RAM: { 8GB, 16GB, 32GB, 64GB, 96GB }\n>     - SSD: { 256GB, 512GB, 1TB }\n>   - Number of final stocks: 4 * 5 * 3 = 60\n> \n> For reference, the total number of `IShoppingSaleUnitStock` records in an\n> attribution unit can be obtained using Cartesian Product. In other words, the\n> value obtained by multiplying all the candidate values that each\n> (variable \"select\" type) option can have by the number of cases is the total\n> number of final stocks in the unit.\n> \n> Of course, without a single variable \"select\" type option, the final stocks\n> count in the unit is only 1.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "title": "Representative name of the stock",
                      "description": "Representative name of the stock.",
                      "type": "string"
                    },
                    "price": {
                      "title": "Price of the stock",
                      "description": "Shopping price interface.",
                      "type": "object",
                      "properties": {
                        "nominal": {
                          "title": "Nominal price",
                          "description": "Nominal price.\n\nThis is not {@link real real price} to pay, but just a nominal price to show.\nIf this value is greater than the {@link real real price}, it would be shown\nlike {@link IShoppingSeller seller} is giving a discount.\n\n\n@minimum 0",
                          "type": "number"
                        },
                        "real": {
                          "title": "Real price to pay",
                          "description": "Real price to pay.\n\n\n@minimum 0",
                          "type": "number"
                        }
                      },
                      "required": [
                        "nominal",
                        "real"
                      ]
                    },
                    "quantity": {
                      "title": "Initial inventory quantity",
                      "description": "Initial inventory quantity.\n\n\n@minimum 1",
                      "type": "integer"
                    },
                    "choices": {
                      "title": "List of choices",
                      "description": "List of choices.\n\nWhich candidate values being chosen for each option.",
                      "type": "array",
                      "items": {
                        "description": "Creation information of stock choice.\n\n------------------------------\n\nDescription of the current {@link IShoppingSaleUnitStockChoice.ICreate} type:\n\n> Creation information of stock choice.\n\n------------------------------\n\nDescription of the parent {@link IShoppingSaleUnitStockChoice} type:\n\n> Selection information of final stock.\n> \n> `IShoppingSaleUnitStockChoice` is an entity that represents which\n> {@link IShoppingSaleUnitSelectableOption option} of each variable \"select\"\n> type was selected for each {@link IShoppingSaleUnitStock stock} and which\n> {@link IShoppingSaleUnitOptionCandidate candidate value} was selected within\n> it.\n> \n> Of course, if the bound {@link IShoppingSaleUnit unit} does not have any\n> options, this entity can also be ignored.",
                        "type": "object",
                        "properties": {
                          "option_index": {
                            "description": "Target option's index number in\n{@link IShoppingSaleUnit.ICreate.options}.",
                            "type": "integer"
                          },
                          "candidate_index": {
                            "description": "Target candidate's index number in\n{@link IShoppingSaleUnitSelectableOption.ICreate.candidates}.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "option_index",
                          "candidate_index"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "price",
                    "quantity",
                    "choices"
                  ]
                }
              },
              "name": {
                "title": "Representative name of the unit",
                "description": "Representative name of the unit.",
                "type": "string"
              },
              "required": {
                "title": "Whether the unit is required or not",
                "description": "Whether the unit is required or not.\n\nWhen the unit is required, the customer must select the unit. If do not\nselect, customer can't buy it.\n\nFor example, if there's a sale \"Macbook Set\" and one of the unit is the\n\"Main Body\", is it possible to buy the \"Macbook Set\" without the\n\"Main Body\" unit? This property is for that case.",
                "type": "boolean"
              },
              "primary": {
                "title": "Whether the unit is primary or not",
                "description": "Whether the unit is primary or not.\n\nJust a labeling value.",
                "type": "boolean"
              }
            },
            "required": [
              "options",
              "stocks",
              "name",
              "required",
              "primary"
            ]
          }
        },
        "tags": {
          "title": "List of search tags",
          "description": "List of search tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "section_code",
        "opened_at",
        "closed_at",
        "content",
        "channels",
        "units",
        "tags"
      ]
    }
  },
  "required": [
    "input"
  ],
  "additionalProperties": false,
  "$defs": {}
}